{"ast":null,"code":"import _extends from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/craigcronin/Development/applestooapples_web_template/src/views/reports/DashboardView/TeamTasks/TaskItem.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { Avatar, IconButton, ListItem, ListItemText, Tooltip, makeStyles } from '@material-ui/core';\nimport { AvatarGroup } from '@material-ui/lab';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    viewButton: {\n      marginLeft: theme.spacing(2)\n    }\n  };\n});\n\nvar TaskItem = function TaskItem(_ref) {\n  var className = _ref.className,\n      task = _ref.task,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"task\"]);\n\n  var classes = useStyles();\n  var deadline = 'N/A';\n\n  if (task.deadline) {\n    var now = moment();\n    var deadlineMoment = moment(task.deadline);\n\n    if (deadlineMoment.isAfter(now) && deadlineMoment.diff(now, 'day') < 3) {\n      deadline = \"\".concat(deadlineMoment.diff(now, 'day'), \" days remaining\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: task.title,\n    primaryTypographyProps: {\n      variant: 'h6',\n      noWrap: true\n    },\n    secondary: deadline,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AvatarGroup, {\n    max: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, task.members.map(function (member) {\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: member.name,\n      title: \"View\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      src: member.avatar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"View task\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.viewButton,\n    edge: \"end\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(OpenInNewIcon, {\n    fontSize: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }))));\n};\n\nTaskItem.propTypes = {\n  className: PropTypes.string,\n  task: PropTypes.object.isRequired\n};\nexport default TaskItem;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/views/reports/DashboardView/TeamTasks/TaskItem.js"],"names":["React","PropTypes","clsx","moment","Avatar","IconButton","ListItem","ListItemText","Tooltip","makeStyles","AvatarGroup","OpenInNewIcon","useStyles","theme","root","viewButton","marginLeft","spacing","TaskItem","className","task","rest","classes","deadline","now","deadlineMoment","isAfter","diff","title","variant","noWrap","members","map","member","name","avatar","propTypes","string","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  IconButton,\n  ListItem,\n  ListItemText,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport { AvatarGroup } from '@material-ui/lab';\nimport OpenInNewIcon from '@material-ui/icons/OpenInNew';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  viewButton: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst TaskItem = ({ className, task, ...rest }) => {\n  const classes = useStyles();\n\n  let deadline = 'N/A';\n\n  if (task.deadline) {\n    const now = moment();\n    const deadlineMoment = moment(task.deadline);\n\n    if (deadlineMoment.isAfter(now) && deadlineMoment.diff(now, 'day') < 3) {\n      deadline = `${deadlineMoment.diff(now, 'day')} days remaining`;\n    }\n  }\n\n  return (\n    <ListItem\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <ListItemText\n        primary={task.title}\n        primaryTypographyProps={{ variant: 'h6', noWrap: true }}\n        secondary={deadline}\n      />\n      <AvatarGroup max={3}>\n        {task.members.map((member) => (\n          <Tooltip\n            key={member.name}\n            title=\"View\"\n          >\n            <Avatar src={member.avatar} />\n          </Tooltip>\n        ))}\n      </AvatarGroup>\n      <Tooltip title=\"View task\">\n        <IconButton\n          className={classes.viewButton}\n          edge=\"end\"\n        >\n          <OpenInNewIcon fontSize=\"small\" />\n        </IconButton>\n      </Tooltip>\n    </ListItem>\n  );\n};\n\nTaskItem.propTypes = {\n  className: PropTypes.string,\n  task: PropTypes.object.isRequired\n};\n\nexport default TaskItem;\n"]},"metadata":{},"sourceType":"module"}