{"ast":null,"code":"import _extends from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/craigcronin/Development/applestooapples_web_template/src/views/reports/DashboardAlternativeView/TopReferrals.js\";\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport { Avatar, Card, CardHeader, Divider, List, ListItem, ListItemAvatar, ListItemText, Typography, makeStyles } from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    avatar: {\n      fontSize: 14,\n      fontWeight: theme.typography.fontWeightBold,\n      color: theme.palette.common.white\n    }\n  };\n});\n\nvar TopReferrals = function TopReferrals(_ref) {\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n  var isMountedRef = useIsMountedRef();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      referrals = _useState2[0],\n      setReferrals = _useState2[1];\n\n  var getReferrals = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get('/api/reports/top-referrals');\n\n          case 3:\n            response = _context.sent;\n\n            if (isMountedRef.current) {\n              setReferrals(response.data.referrals);\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  })), [isMountedRef]);\n  useEffect(function () {\n    getReferrals();\n  }, [getReferrals]);\n  return /*#__PURE__*/React.createElement(Card, _extends({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(GenericMoreButton, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }),\n    title: \"Top Referrals\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    disablePadding: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, referrals.map(function (referral, i) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      divider: i < referrals.length - 1,\n      key: referral.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: classes.avatar,\n      style: {\n        backgroundColor: referral.color\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, referral.initials)), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: referral.name,\n      primaryTypographyProps: {\n        variant: 'h6'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, numeral(referral.value).format('0,0')));\n  })));\n};\n\nTopReferrals.propTypes = {\n  className: PropTypes.string\n};\nexport default TopReferrals;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/views/reports/DashboardAlternativeView/TopReferrals.js"],"names":["React","useState","useEffect","useCallback","clsx","PropTypes","numeral","Avatar","Card","CardHeader","Divider","List","ListItem","ListItemAvatar","ListItemText","Typography","makeStyles","GenericMoreButton","axios","useIsMountedRef","useStyles","theme","root","display","flexDirection","avatar","fontSize","fontWeight","typography","fontWeightBold","color","palette","common","white","TopReferrals","className","rest","classes","isMountedRef","referrals","setReferrals","getReferrals","get","response","current","data","console","error","map","referral","i","length","name","backgroundColor","initials","variant","value","format","propTypes","string"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport {\n  Avatar,\n  Card,\n  CardHeader,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  avatar: {\n    fontSize: 14,\n    fontWeight: theme.typography.fontWeightBold,\n    color: theme.palette.common.white\n  }\n}));\n\nconst TopReferrals = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [referrals, setReferrals] = useState([]);\n\n  const getReferrals = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/reports/top-referrals');\n\n      if (isMountedRef.current) {\n        setReferrals(response.data.referrals);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getReferrals();\n  }, [getReferrals]);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Top Referrals\"\n      />\n      <Divider />\n      <List disablePadding>\n        {referrals.map((referral, i) => (\n          <ListItem\n            divider={i < referrals.length - 1}\n            key={referral.name}\n          >\n            <ListItemAvatar>\n              <Avatar\n                className={classes.avatar}\n                style={{ backgroundColor: referral.color }}\n              >\n                {referral.initials}\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText\n              primary={referral.name}\n              primaryTypographyProps={{ variant: 'h6' }}\n            />\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n            >\n              {numeral(referral.value).format('0,0')}\n            </Typography>\n          </ListItem>\n        ))}\n      </List>\n    </Card>\n  );\n};\n\nTopReferrals.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TopReferrals;\n"]},"metadata":{},"sourceType":"module"}