{"ast":null,"code":"import _objectSpread from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport _ from 'lodash';\nimport mock from 'src/utils/mock';\nvar board = {\n  lists: [{\n    id: '5e849c39325dc5ef58e5a5db',\n    name: 'Incoming',\n    cardIds: ['5e849c8708bd72683b454747', '5e849c90fabe1f1f4b3557f6', '5e849c977ef6265938bfd90b', '5e849c9e34ee93bc7255c599']\n  }, {\n    id: '5e849c2b38d238c33e516755',\n    name: 'In progress',\n    cardIds: ['5e849ca7d063dc3830d4b49c', '5e849cb5d0c6e8894451fdfa']\n  }],\n  cards: [{\n    id: '5e849c8708bd72683b454747',\n    attachments: [],\n    checklists: [{\n      id: '5e84a8175c48d3f5b1d01972',\n      name: 'Update home page',\n      checkItems: [{\n        id: '5e85af37da584c5e4bd8a06c',\n        name: 'An item',\n        state: 'complete'\n      }]\n    }],\n    comments: [{\n      id: '15e849c5a35d4dff4f88ebff6',\n      cardId: '5e849c8708bd72683b454747',\n      createdAt: moment().subtract(5, 'days').toDate().getTime(),\n      memberId: '5e887ac47eed253091be10cb',\n      message: 'This is a comment'\n    }],\n    cover: '/static/images/projects/project_3.png',\n    description: 'Duis condimentum lacus finibus felis pellentesque, ac auctor nibh fermentum. Duis sed dui ante. Phasellus id eros tincidunt, dictum lorem vitae, pellentesque sem. Aenean eu enim sit amet mauris rhoncus mollis. Sed enim turpis, porta a felis et, luctus faucibus nisi. Phasellus et metus fermentum, ultrices arcu aliquam, facilisis justo. Cras nunc nunc, elementum sed euismod ut, maximus eget nibh. Phasellus condimentum lorem neque. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Fusce sagittis pharetra eleifend. Suspendisse potenti.',\n    due: moment().add(7, 'days').toDate().getTime(),\n    isSubscribed: false,\n    listId: '5e849c39325dc5ef58e5a5db',\n    memberIds: ['5e86809283e28b96d2d38537'],\n    name: 'Call with sales of HubSpot'\n  }, {\n    id: '5e849c90fabe1f1f4b3557f6',\n    attachments: [],\n    checklists: [],\n    comments: [],\n    cover: null,\n    description: 'We are looking for vue experience and of course node js strong knowledge',\n    due: moment().add(6, 'days').toDate().getTime(),\n    isSubscribed: true,\n    listId: '5e849c39325dc5ef58e5a5db',\n    memberIds: ['5e887b209c28ac3dd97f6db5', '5e887a62195cc5aef7e8ca5d'],\n    name: 'Interview for the Asis. Sales Manager'\n  }, {\n    id: '5e849c977ef6265938bfd90b',\n    attachments: [],\n    checklists: [],\n    comments: [],\n    cover: null,\n    description: 'We nede to make it aggresive with pricing because it’s in their interest to acquire us',\n    due: null,\n    isSubscribed: false,\n    listId: '5e849c39325dc5ef58e5a5db',\n    memberIds: [],\n    name: 'Change the height of the top bar because it looks too chunky'\n  }, {\n    id: '5e849c9e34ee93bc7255c599',\n    attachments: [],\n    checklists: [],\n    comments: [],\n    cover: null,\n    description: 'We nede to make it aggresive with pricing because it’s in their interest to acquire us',\n    due: null,\n    isSubscribed: false,\n    listId: '5e849c39325dc5ef58e5a5db',\n    memberIds: ['5e887ac47eed253091be10cb', '5e86809283e28b96d2d38537'],\n    name: 'Integrate Stripe API'\n  }, {\n    id: '5e849ca7d063dc3830d4b49c',\n    attachments: [],\n    checklists: [],\n    comments: [],\n    cover: null,\n    description: 'We need to make it aggresive with pricing because it’s in their interest to acquire us',\n    due: null,\n    isSubscribed: true,\n    listId: '5e849c2b38d238c33e516755',\n    memberIds: ['5e887a62195cc5aef7e8ca5d'],\n    name: 'Update the customer API for payments'\n  }, {\n    id: '5e849cb5d0c6e8894451fdfa',\n    attachments: [],\n    checklists: [],\n    comments: [],\n    cover: null,\n    description: 'We need to make it aggresive with pricing because it’s in their interest to acquire us',\n    due: null,\n    isSubscribed: true,\n    listId: '5e849c2b38d238c33e516755',\n    memberIds: [],\n    name: 'Redesign the landing page'\n  }],\n  members: [{\n    id: '5e887a62195cc5aef7e8ca5d',\n    avatar: '/static/images/avatars/avatar_2.png',\n    name: 'Ekaterina Tankova'\n  }, {\n    id: '5e887ac47eed253091be10cb',\n    avatar: '/static/images/avatars/avatar_3.png',\n    name: 'Cao Yu'\n  }, {\n    id: '5e887b209c28ac3dd97f6db5',\n    avatar: '/static/images/avatars/avatar_4.png',\n    name: 'Alex Richardson'\n  }, {\n    id: '5e887b7602bdbc4dbb234b27',\n    avatar: '/static/images/avatars/avatar_5.png',\n    name: 'Anje Keizer'\n  }, {\n    id: '5e86809283e28b96d2d38537',\n    avatar: '/static/images/avatars/avatar_6.png',\n    name: 'Katarina Smith'\n  }]\n};\nmock.onGet('/api/kanban/board').reply(200, {\n  board: board\n});\nmock.onPost('/api/kanban/lists/new').reply(function (request) {\n  try {\n    var _JSON$parse = JSON.parse(request.data),\n        name = _JSON$parse.name;\n\n    var list = {\n      id: uuidv4(),\n      name: name,\n      cardIds: []\n    };\n\n    _.assign(board, {\n      lists: [].concat(_toConsumableArray(board.lists), [list])\n    });\n\n    return [200, {\n      list: list\n    }];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nmock.onPost('/api/kanban/list/update').reply(function (request) {\n  try {\n    var _JSON$parse2 = JSON.parse(request.data),\n        listId = _JSON$parse2.listId,\n        update = _JSON$parse2.update;\n\n    var list = board.lists.find(function (_list) {\n      return _list.id === listId;\n    });\n\n    _.assign(list, update);\n\n    return [200, {\n      list: list\n    }];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nmock.onPost('/api/kanban/lists/clear').reply(function (request) {\n  try {\n    var _JSON$parse3 = JSON.parse(request.data),\n        listId = _JSON$parse3.listId;\n\n    _.assign(board, {\n      lists: _.map(board.lists, function (list) {\n        if (list.id === listId) {\n          _.assign(list, {\n            cardIds: []\n          });\n        }\n\n        return list;\n      }),\n      cards: board.cards.filter(function (card) {\n        return card.listId !== listId;\n      })\n    });\n\n    return [200, {\n      listId: listId\n    }];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nmock.onPost('/api/kanban/lists/remove').reply(function (request) {\n  try {\n    var _JSON$parse4 = JSON.parse(request.data),\n        listId = _JSON$parse4.listId;\n\n    _.assign(board, {\n      lists: _.reject(board.lists, {\n        id: listId\n      }),\n      cards: board.cards.filter(function (card) {\n        return card.listId !== listId;\n      })\n    });\n\n    return [200, {\n      listId: listId\n    }];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nmock.onPost('/api/kanban/cards/new').reply(function (request) {\n  try {\n    var _JSON$parse5 = JSON.parse(request.data),\n        listId = _JSON$parse5.listId,\n        name = _JSON$parse5.name;\n\n    var card = {\n      id: uuidv4(),\n      attachments: [],\n      checklists: [],\n      comments: [],\n      cover: null,\n      description: null,\n      due: null,\n      isSubscribed: false,\n      listId: listId,\n      memberIds: [],\n      name: name\n    };\n\n    _.assign(board, {\n      cards: [].concat(_toConsumableArray(board.cards), [card]),\n      lists: _.map(board.lists, function (list) {\n        if (list.id === listId) {\n          _.assign(list, {\n            cardIds: [].concat(_toConsumableArray(list.cardIds), [card.id])\n          });\n        }\n\n        return list;\n      })\n    });\n\n    return [200, {\n      card: card\n    }];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nmock.onPost('/api/kanban/cards/update').reply(function (request) {\n  try {\n    var _JSON$parse6 = JSON.parse(request.data),\n        cardId = _JSON$parse6.cardId,\n        update = _JSON$parse6.update;\n\n    var card = board.cards.find(function (_card) {\n      return _card.id === cardId;\n    });\n\n    _.assign(card, update);\n\n    return [200, {\n      card: card\n    }];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nmock.onPost('/api/kanban/cards/move').reply(function (request) {\n  try {\n    var _JSON$parse7 = JSON.parse(request.data),\n        cardId = _JSON$parse7.cardId,\n        position = _JSON$parse7.position,\n        listId = _JSON$parse7.listId;\n\n    var card = board.cards.find(function (_card) {\n      return _card.id === cardId;\n    });\n\n    if (!card) {\n      return [400, 'Card not found'];\n    }\n\n    var sourceList = board.lists.find(function (list) {\n      return list.id === card.listId;\n    });\n\n    if (!sourceList) {\n      return [500, 'List not found'];\n    }\n\n    _.pull(sourceList.cardIds, cardId);\n\n    if (listId) {\n      var destinationList = board.lists.find(function (list) {\n        return list.id === card.listId;\n      });\n\n      if (!destinationList) {\n        return [500, 'List not found'];\n      }\n\n      sourceList.cardIds.splice(position, 0, card.id);\n      card.listId = destinationList.id;\n    } else {\n      sourceList.cardIds.splice(position, 0, card.id);\n    }\n\n    return [200, true];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nmock.onPost('/api/kanban/cards/remove').reply(function (request) {\n  try {\n    var _JSON$parse8 = JSON.parse(request.data),\n        cardId = _JSON$parse8.cardId;\n\n    _.assign(board, {\n      cards: _.reject(board.cards, {\n        id: cardId\n      }),\n      lists: _.map(board.lists, function (list) {\n        _.assign(list, {\n          cardIds: list.cardIds.filter(function (_cardId) {\n            return _cardId !== cardId;\n          })\n        });\n\n        return list;\n      })\n    });\n\n    return [200, {\n      cardId: cardId\n    }];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nmock.onPost('/api/kanban/comments/new').reply(function (request) {\n  try {\n    var _JSON$parse9 = JSON.parse(request.data),\n        cardId = _JSON$parse9.cardId,\n        message = _JSON$parse9.message;\n\n    var comment = {\n      id: uuidv4(),\n      cardId: cardId,\n      createdAt: moment().toDate().getTime(),\n      memberId: '5e86809283e28b96d2d38537',\n      // On server get current user from request\n      message: message\n    };\n\n    _.assign(board, {\n      cards: _.map(board.cards, function (card) {\n        if (card.id === cardId) {\n          _.assign(card, {\n            comments: [].concat(_toConsumableArray(card.comments), [comment])\n          });\n        }\n\n        return card;\n      })\n    });\n\n    return [200, {\n      comment: comment\n    }];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nmock.onPost('/api/kanban/checklists/new').reply(function (request) {\n  try {\n    var _JSON$parse10 = JSON.parse(request.data),\n        cardId = _JSON$parse10.cardId,\n        name = _JSON$parse10.name;\n\n    var checklist = {\n      id: uuidv4(),\n      name: name,\n      checkItems: []\n    };\n\n    _.assign(board, {\n      cards: _.map(board.cards, function (card) {\n        if (card.id === cardId) {\n          _.assign(card, {\n            checklists: [].concat(_toConsumableArray(card.checklists), [checklist])\n          });\n        }\n\n        return card;\n      })\n    });\n\n    return [200, {\n      checklist: checklist\n    }];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nmock.onPost('/api/kanban/checklists/update').reply(function (request) {\n  try {\n    var _JSON$parse11 = JSON.parse(request.data),\n        cardId = _JSON$parse11.cardId,\n        checklistId = _JSON$parse11.checklistId,\n        update = _JSON$parse11.update;\n\n    var checklist = null;\n\n    _.assign(board, {\n      cards: _.map(board.cards, function (card) {\n        if (card.id === cardId) {\n          _.map(card.checklists, function (_checklist) {\n            if (_checklist.id === checklistId) {\n              _.assign(_checklist, _objectSpread({}, update));\n\n              checklist = _checklist;\n            }\n\n            return _checklist;\n          });\n        }\n\n        return card;\n      })\n    });\n\n    return [200, {\n      checklist: checklist\n    }];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nmock.onPost('/api/kanban/checklists/remove').reply(function (request) {\n  try {\n    var _JSON$parse12 = JSON.parse(request.data),\n        cardId = _JSON$parse12.cardId,\n        checklistId = _JSON$parse12.checklistId;\n\n    _.assign(board, {\n      cards: _.map(board.cards, function (card) {\n        if (card.id === cardId) {\n          _.assign(card, {\n            checklists: _.reject(card.checklists, {\n              id: checklistId\n            })\n          });\n        }\n\n        return card;\n      })\n    });\n\n    return [200, true];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nmock.onPost('/api/kanban/checkitems/new').reply(function (request) {\n  try {\n    var _JSON$parse13 = JSON.parse(request.data),\n        cardId = _JSON$parse13.cardId,\n        checklistId = _JSON$parse13.checklistId,\n        name = _JSON$parse13.name;\n\n    var checkItem = {\n      id: uuidv4(),\n      checklistId: checklistId,\n      name: name,\n      state: 'incomplete'\n    };\n\n    _.assign(board, {\n      cards: _.map(board.cards, function (card) {\n        if (card.id === cardId) {\n          _.assign(card, {\n            checklists: _.each(card.checklists, function (checklist) {\n              if (checklist.id === checklistId) {\n                _.assign(checklist, {\n                  checkItems: [].concat(_toConsumableArray(checklist.checkItems), [checkItem])\n                });\n              }\n\n              return checklist;\n            })\n          });\n        }\n\n        return card;\n      })\n    });\n\n    return [200, {\n      checkItem: checkItem\n    }];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nmock.onPost('/api/kanban/checkitems/update').reply(function (request) {\n  try {\n    var _JSON$parse14 = JSON.parse(request.data),\n        cardId = _JSON$parse14.cardId,\n        checklistId = _JSON$parse14.checklistId,\n        checkItemId = _JSON$parse14.checkItemId,\n        update = _JSON$parse14.update;\n\n    var checkItem = null;\n\n    _.assign(board, {\n      cards: _.map(board.cards, function (card) {\n        if (card.id === cardId) {\n          _.assign(card, {\n            checklists: _.map(card.checklists, function (checklist) {\n              if (checklist.id === checklistId) {\n                _.assign(checklist, {\n                  checkItems: _.map(checklist.checkItems, function (_checkItem) {\n                    if (_checkItem.id === checkItemId) {\n                      _.assign(_checkItem, _objectSpread({}, update));\n\n                      checkItem = _checkItem;\n                    }\n\n                    return _checkItem;\n                  })\n                });\n              }\n\n              return checklist;\n            })\n          });\n        }\n\n        return card;\n      })\n    });\n\n    return [200, {\n      checkItem: checkItem\n    }];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});\nmock.onPost('/api/kanban/checkitems/remove').reply(function (request) {\n  try {\n    var _JSON$parse15 = JSON.parse(request.data),\n        cardId = _JSON$parse15.cardId,\n        checklistId = _JSON$parse15.checklistId,\n        checkItemId = _JSON$parse15.checkItemId;\n\n    _.assign(board, {\n      cards: _.map(board.cards, function (card) {\n        if (card.id === cardId) {\n          _.assign(card, {\n            checklists: _.map(card.checklists, function (checklist) {\n              if (checklist.id === checklistId) {\n                _.assign(checklist, {\n                  checkItems: _.reject(checklist.checkItems, {\n                    id: checkItemId\n                  })\n                });\n              }\n\n              return checklist;\n            })\n          });\n        }\n\n        return card;\n      })\n    });\n\n    return [200, true];\n  } catch (err) {\n    console.error(err);\n    return [500, {\n      message: 'Internal server error'\n    }];\n  }\n});","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/__mocks__/kanban.js"],"names":["moment","v4","uuidv4","_","mock","board","lists","id","name","cardIds","cards","attachments","checklists","checkItems","state","comments","cardId","createdAt","subtract","toDate","getTime","memberId","message","cover","description","due","add","isSubscribed","listId","memberIds","members","avatar","onGet","reply","onPost","request","JSON","parse","data","list","assign","err","console","error","update","find","_list","map","filter","card","reject","_card","position","sourceList","pull","destinationList","splice","_cardId","comment","checklist","checklistId","_checklist","checkItem","each","checkItemId","_checkItem"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport { v4 as uuidv4 } from 'uuid';\nimport _ from 'lodash';\nimport mock from 'src/utils/mock';\n\nconst board = {\n  lists: [\n    {\n      id: '5e849c39325dc5ef58e5a5db',\n      name: 'Incoming',\n      cardIds: [\n        '5e849c8708bd72683b454747',\n        '5e849c90fabe1f1f4b3557f6',\n        '5e849c977ef6265938bfd90b',\n        '5e849c9e34ee93bc7255c599'\n      ]\n    },\n    {\n      id: '5e849c2b38d238c33e516755',\n      name: 'In progress',\n      cardIds: [\n        '5e849ca7d063dc3830d4b49c',\n        '5e849cb5d0c6e8894451fdfa'\n      ]\n    }\n  ],\n  cards: [\n    {\n      id: '5e849c8708bd72683b454747',\n      attachments: [],\n      checklists: [\n        {\n          id: '5e84a8175c48d3f5b1d01972',\n          name: 'Update home page',\n          checkItems: [\n            {\n              id: '5e85af37da584c5e4bd8a06c',\n              name: 'An item',\n              state: 'complete'\n            }\n          ]\n        }\n      ],\n      comments: [\n        {\n          id: '15e849c5a35d4dff4f88ebff6',\n          cardId: '5e849c8708bd72683b454747',\n          createdAt: moment()\n            .subtract(5, 'days')\n            .toDate()\n            .getTime(),\n          memberId: '5e887ac47eed253091be10cb',\n          message: 'This is a comment'\n        }\n      ],\n      cover: '/static/images/projects/project_3.png',\n      description: 'Duis condimentum lacus finibus felis pellentesque, ac auctor nibh fermentum. Duis sed dui ante. Phasellus id eros tincidunt, dictum lorem vitae, pellentesque sem. Aenean eu enim sit amet mauris rhoncus mollis. Sed enim turpis, porta a felis et, luctus faucibus nisi. Phasellus et metus fermentum, ultrices arcu aliquam, facilisis justo. Cras nunc nunc, elementum sed euismod ut, maximus eget nibh. Phasellus condimentum lorem neque. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Fusce sagittis pharetra eleifend. Suspendisse potenti.',\n      due: moment()\n        .add(7, 'days')\n        .toDate()\n        .getTime(),\n      isSubscribed: false,\n      listId: '5e849c39325dc5ef58e5a5db',\n      memberIds: ['5e86809283e28b96d2d38537'],\n      name: 'Call with sales of HubSpot'\n    },\n    {\n      id: '5e849c90fabe1f1f4b3557f6',\n      attachments: [],\n      checklists: [],\n      comments: [],\n      cover: null,\n      description: 'We are looking for vue experience and of course node js strong knowledge',\n      due: moment()\n        .add(6, 'days')\n        .toDate()\n        .getTime(),\n      isSubscribed: true,\n      listId: '5e849c39325dc5ef58e5a5db',\n      memberIds: ['5e887b209c28ac3dd97f6db5', '5e887a62195cc5aef7e8ca5d'],\n      name: 'Interview for the Asis. Sales Manager'\n    },\n    {\n      id: '5e849c977ef6265938bfd90b',\n      attachments: [],\n      checklists: [],\n      comments: [],\n      cover: null,\n      description: 'We nede to make it aggresive with pricing because it’s in their interest to acquire us',\n      due: null,\n      isSubscribed: false,\n      listId: '5e849c39325dc5ef58e5a5db',\n      memberIds: [],\n      name: 'Change the height of the top bar because it looks too chunky',\n    },\n    {\n      id: '5e849c9e34ee93bc7255c599',\n      attachments: [],\n      checklists: [],\n      comments: [],\n      cover: null,\n      description: 'We nede to make it aggresive with pricing because it’s in their interest to acquire us',\n      due: null,\n      isSubscribed: false,\n      listId: '5e849c39325dc5ef58e5a5db',\n      memberIds: ['5e887ac47eed253091be10cb', '5e86809283e28b96d2d38537'],\n      name: 'Integrate Stripe API'\n    },\n    {\n      id: '5e849ca7d063dc3830d4b49c',\n      attachments: [],\n      checklists: [],\n      comments: [],\n      cover: null,\n      description: 'We need to make it aggresive with pricing because it’s in their interest to acquire us',\n      due: null,\n      isSubscribed: true,\n      listId: '5e849c2b38d238c33e516755',\n      memberIds: ['5e887a62195cc5aef7e8ca5d'],\n      name: 'Update the customer API for payments'\n    },\n    {\n      id: '5e849cb5d0c6e8894451fdfa',\n      attachments: [],\n      checklists: [],\n      comments: [],\n      cover: null,\n      description: 'We need to make it aggresive with pricing because it’s in their interest to acquire us',\n      due: null,\n      isSubscribed: true,\n      listId: '5e849c2b38d238c33e516755',\n      memberIds: [],\n      name: 'Redesign the landing page'\n    }\n  ],\n  members: [\n    {\n      id: '5e887a62195cc5aef7e8ca5d',\n      avatar: '/static/images/avatars/avatar_2.png',\n      name: 'Ekaterina Tankova',\n    },\n    {\n      id: '5e887ac47eed253091be10cb',\n      avatar: '/static/images/avatars/avatar_3.png',\n      name: 'Cao Yu'\n    },\n    {\n      id: '5e887b209c28ac3dd97f6db5',\n      avatar: '/static/images/avatars/avatar_4.png',\n      name: 'Alex Richardson'\n    },\n    {\n      id: '5e887b7602bdbc4dbb234b27',\n      avatar: '/static/images/avatars/avatar_5.png',\n      name: 'Anje Keizer'\n    },\n    {\n      id: '5e86809283e28b96d2d38537',\n      avatar: '/static/images/avatars/avatar_6.png',\n      name: 'Katarina Smith'\n    }\n  ]\n};\n\nmock.onGet('/api/kanban/board').reply(200, { board });\n\nmock.onPost('/api/kanban/lists/new').reply((request) => {\n  try {\n    const { name } = JSON.parse(request.data);\n    const list = {\n      id: uuidv4(),\n      name,\n      cardIds: []\n    };\n\n    _.assign(board, {\n      lists: [...board.lists, list]\n    });\n\n    return [200, { list }];\n  } catch (err) {\n    console.error(err);\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nmock.onPost('/api/kanban/list/update').reply((request) => {\n  try {\n    const { listId, update } = JSON.parse(request.data);\n    const list = board.lists.find((_list) => _list.id === listId);\n\n    _.assign(list, update);\n\n    return [200, { list }];\n  } catch (err) {\n    console.error(err);\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nmock.onPost('/api/kanban/lists/clear').reply((request) => {\n  try {\n    const { listId } = JSON.parse(request.data);\n\n    _.assign(board, {\n      lists: _.map(board.lists, (list) => {\n        if (list.id === listId) {\n          _.assign(list, {\n            cardIds: []\n          });\n        }\n\n        return list;\n      }),\n      cards: board.cards.filter((card) => card.listId !== listId)\n    });\n\n    return [200, { listId }];\n  } catch (err) {\n    console.error(err);\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nmock.onPost('/api/kanban/lists/remove').reply((request) => {\n  try {\n    const { listId } = JSON.parse(request.data);\n\n    _.assign(board, {\n      lists: _.reject(board.lists, { id: listId }),\n      cards: board.cards.filter((card) => card.listId !== listId)\n    });\n\n    return [200, { listId }];\n  } catch (err) {\n    console.error(err);\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nmock.onPost('/api/kanban/cards/new').reply((request) => {\n  try {\n    const { listId, name } = JSON.parse(request.data);\n    const card = {\n      id: uuidv4(),\n      attachments: [],\n      checklists: [],\n      comments: [],\n      cover: null,\n      description: null,\n      due: null,\n      isSubscribed: false,\n      listId,\n      memberIds: [],\n      name\n    };\n\n    _.assign(board, {\n      cards: [...board.cards, card],\n      lists: _.map(board.lists, (list) => {\n        if (list.id === listId) {\n          _.assign(list, {\n            cardIds: [...list.cardIds, card.id]\n          });\n        }\n\n        return list;\n      })\n    });\n\n    return [200, { card }];\n  } catch (err) {\n    console.error(err);\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nmock.onPost('/api/kanban/cards/update').reply((request) => {\n  try {\n    const { cardId, update } = JSON.parse(request.data);\n    const card = board.cards.find((_card) => _card.id === cardId);\n\n    _.assign(card, update);\n\n    return [200, { card }];\n  } catch (err) {\n    console.error(err);\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nmock.onPost('/api/kanban/cards/move').reply((request) => {\n  try {\n    const { cardId, position, listId } = JSON.parse(request.data);\n    const card = board.cards.find((_card) => _card.id === cardId);\n\n    if (!card) {\n      return [400, 'Card not found'];\n    }\n\n    const sourceList = board.lists.find((list) => list.id === card.listId);\n\n    if (!sourceList) {\n      return [500, 'List not found']\n    }\n\n    _.pull(sourceList.cardIds, cardId);\n\n    if (listId) {\n      const destinationList = board.lists.find((list) => list.id === card.listId);\n\n      if (!destinationList) {\n        return [500, 'List not found']\n      }\n\n      sourceList.cardIds.splice(position, 0, card.id);\n      card.listId = destinationList.id;\n    } else {\n      sourceList.cardIds.splice(position, 0, card.id);\n    }\n\n    return [200, true];\n  } catch (err) {\n    console.error(err);\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nmock.onPost('/api/kanban/cards/remove').reply((request) => {\n  try {\n    const { cardId } = JSON.parse(request.data);\n\n    _.assign(board, {\n      cards: _.reject(board.cards, { id: cardId }),\n      lists: _.map(board.lists, (list) => {\n        _.assign(list, {\n          cardIds: list.cardIds.filter((_cardId) => _cardId !== cardId)\n        });\n\n        return list;\n      })\n    });\n\n    return [200, { cardId }];\n  } catch (err) {\n    console.error(err);\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nmock.onPost('/api/kanban/comments/new').reply((request) => {\n  try {\n    const { cardId, message } = JSON.parse(request.data);\n    const comment = {\n      id: uuidv4(),\n      cardId,\n      createdAt: moment()\n        .toDate()\n        .getTime(),\n      memberId: '5e86809283e28b96d2d38537', // On server get current user from request\n      message\n    };\n\n    _.assign(board, {\n      cards: _.map(board.cards, (card) => {\n        if (card.id === cardId) {\n          _.assign(card, {\n            comments: [...card.comments, comment]\n          });\n        }\n\n        return card;\n      })\n    });\n\n    return [200, { comment }];\n  } catch (err) {\n    console.error(err);\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nmock.onPost('/api/kanban/checklists/new').reply((request) => {\n  try {\n    const { cardId, name } = JSON.parse(request.data);\n    const checklist = {\n      id: uuidv4(),\n      name,\n      checkItems: []\n    };\n\n    _.assign(board, {\n      cards: _.map(board.cards, (card) => {\n        if (card.id === cardId) {\n          _.assign(card, {\n            checklists: [...card.checklists, checklist]\n          });\n        }\n\n        return card;\n      })\n    });\n\n    return [200, { checklist }];\n  } catch (err) {\n    console.error(err);\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nmock.onPost('/api/kanban/checklists/update').reply((request) => {\n  try {\n    const { cardId, checklistId, update } = JSON.parse(request.data);\n    let checklist = null;\n\n    _.assign(board, {\n      cards: _.map(board.cards, (card) => {\n        if (card.id === cardId) {\n          _.map(card.checklists, (_checklist) => {\n            if (_checklist.id === checklistId) {\n              _.assign(_checklist, { ...update });\n              checklist = _checklist;\n            }\n\n            return _checklist;\n          });\n        }\n\n        return card;\n      })\n    });\n\n    return [200, { checklist }];\n  } catch (err) {\n    console.error(err);\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nmock.onPost('/api/kanban/checklists/remove').reply((request) => {\n  try {\n    const { cardId, checklistId } = JSON.parse(request.data);\n\n    _.assign(board, {\n      cards: _.map(board.cards, (card) => {\n        if (card.id === cardId) {\n          _.assign(card, {\n            checklists: _.reject(card.checklists, { id: checklistId }),\n          });\n        }\n\n        return card;\n      })\n    });\n\n    return [200, true];\n  } catch (err) {\n    console.error(err);\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nmock.onPost('/api/kanban/checkitems/new').reply((request) => {\n  try {\n    const { cardId, checklistId, name } = JSON.parse(request.data);\n    const checkItem = {\n      id: uuidv4(),\n      checklistId,\n      name,\n      state: 'incomplete'\n    };\n\n    _.assign(board, {\n      cards: _.map(board.cards, (card) => {\n        if (card.id === cardId) {\n          _.assign(card, {\n            checklists: _.each(card.checklists, (checklist) => {\n              if (checklist.id === checklistId) {\n                _.assign(checklist, {\n                  checkItems: [...checklist.checkItems, checkItem]\n                });\n              }\n\n              return checklist;\n            })\n          });\n        }\n\n        return card;\n      })\n    });\n\n    return [200, { checkItem }];\n  } catch (err) {\n    console.error(err);\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nmock.onPost('/api/kanban/checkitems/update').reply((request) => {\n  try {\n    const {\n      cardId,\n      checklistId,\n      checkItemId,\n      update\n    } = JSON.parse(request.data);\n    let checkItem = null;\n\n    _.assign(board, {\n      cards: _.map(board.cards, (card) => {\n        if (card.id === cardId) {\n          _.assign(card, {\n            checklists: _.map(card.checklists, (checklist) => {\n              if (checklist.id === checklistId) {\n                _.assign(checklist, {\n                  checkItems: _.map(checklist.checkItems, (_checkItem) => {\n                    if (_checkItem.id === checkItemId) {\n                      _.assign(_checkItem, { ...update });\n                      checkItem = _checkItem;\n                    }\n\n                    return _checkItem;\n                  })\n                });\n              }\n\n              return checklist;\n            })\n          });\n        }\n\n        return card;\n      })\n    });\n\n    return [200, { checkItem }];\n  } catch (err) {\n    console.error(err);\n    return [500, { message: 'Internal server error' }];\n  }\n});\n\nmock.onPost('/api/kanban/checkitems/remove').reply((request) => {\n  try {\n    const { cardId, checklistId, checkItemId } = JSON.parse(request.data);\n\n    _.assign(board, {\n      cards: _.map(board.cards, (card) => {\n        if (card.id === cardId) {\n          _.assign(card, {\n            checklists: _.map(card.checklists, (checklist) => {\n              if (checklist.id === checklistId) {\n                _.assign(checklist, {\n                  checkItems: _.reject(checklist.checkItems, { id: checkItemId })\n                });\n              }\n\n              return checklist;\n            })\n          });\n        }\n\n        return card;\n      })\n    });\n\n    return [200, true];\n  } catch (err) {\n    console.error(err);\n    return [500, { message: 'Internal server error' }];\n  }\n});\n"]},"metadata":{},"sourceType":"module"}