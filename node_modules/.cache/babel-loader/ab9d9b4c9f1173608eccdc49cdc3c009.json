{"ast":null,"code":"import _extends from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/craigcronin/Development/applestooapples_web_template/src/views/customer/CustomerDetailsView/Logs.js\";\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Card, CardHeader, Divider, Typography, Table, TableBody, TableCell, TableRow, makeStyles } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Label from 'src/components/Label';\nvar useStyles = makeStyles(function () {\n  return {\n    root: {},\n    methodCell: {\n      width: 100\n    },\n    statusCell: {\n      width: 64\n    }\n  };\n});\n\nvar Logs = function Logs(_ref) {\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n  var isMountedRef = useIsMountedRef();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      logs = _useState2[0],\n      setLogs = _useState2[1];\n\n  var getLogs = useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get('/api/customers/1/logs');\n\n          case 3:\n            response = _context.sent;\n\n            if (isMountedRef.current) {\n              setLogs(response.data.logs);\n            }\n\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  })), [isMountedRef]);\n  useEffect(function () {\n    getLogs();\n  }, [getLogs]);\n  return /*#__PURE__*/React.createElement(Card, _extends({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Customer logs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    minWidth: 1150,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, logs.map(function (log) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: log.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.methodCell,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      color: \"textPrimary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, log.method)), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.statusCell,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      color: log.status === 200 ? 'success' : 'error',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, log.status)), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }, log.route), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 19\n      }\n    }, log.description), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, log.ip), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, moment(log.createdAt).format('YYYY/MM/DD | hh:mm:ss')));\n  }))))));\n};\n\nLogs.propTypes = {\n  className: PropTypes.string\n};\nexport default Logs;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/views/customer/CustomerDetailsView/Logs.js"],"names":["React","useState","useEffect","useCallback","PropTypes","clsx","moment","PerfectScrollbar","Box","Card","CardHeader","Divider","Typography","Table","TableBody","TableCell","TableRow","makeStyles","axios","useIsMountedRef","Label","useStyles","root","methodCell","width","statusCell","Logs","className","rest","classes","isMountedRef","logs","setLogs","getLogs","get","response","current","data","console","error","map","log","id","method","status","route","description","ip","createdAt","format","propTypes","string"],"mappings":"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","sourcesContent":["import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Divider,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Label from 'src/components/Label';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  methodCell: {\n    width: 100\n  },\n  statusCell: {\n    width: 64\n  }\n}));\n\nconst Logs = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [logs, setLogs] = useState([]);\n\n  const getLogs = useCallback(async () => {\n    try {\n      const response = await axios.get('/api/customers/1/logs')\n\n      if (isMountedRef.current) {\n        setLogs(response.data.logs);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getLogs();\n  }, [getLogs]);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardHeader title=\"Customer logs\" />\n      <Divider />\n      <PerfectScrollbar>\n        <Box minWidth={1150}>\n          <Table>\n            <TableBody>\n              {logs.map((log) => (\n                <TableRow key={log.id}>\n                  <TableCell className={classes.methodCell}>\n                    <Typography\n                      variant=\"h6\"\n                      color=\"textPrimary\"\n                    >\n                      {log.method}\n                    </Typography>\n                  </TableCell>\n                  <TableCell className={classes.statusCell}>\n                    <Label\n                      color={\n                        log.status === 200\n                          ? 'success'\n                          : 'error'\n                      }\n                    >\n                      {log.status}\n                    </Label>\n                  </TableCell>\n                  <TableCell>\n                    {log.route}\n                  </TableCell>\n                  <TableCell>\n                    {log.description}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {log.ip}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {moment(log.createdAt).format('YYYY/MM/DD | hh:mm:ss')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nLogs.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Logs;\n"]},"metadata":{},"sourceType":"module"}