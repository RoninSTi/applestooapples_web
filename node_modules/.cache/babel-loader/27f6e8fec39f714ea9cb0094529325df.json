{"ast":null,"code":"import _extends from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/craigcronin/Development/applestooapples_web_template/src/views/chat/ChatView/Thread/MessageItem.js\";\n\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { Lightbox } from 'react-modal-image';\nimport { Avatar, Box, Link, Typography, makeStyles } from '@material-ui/core';\nimport useAuth from 'src/hooks/useAuth';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      marginBottom: theme.spacing(2),\n      display: 'flex'\n    },\n    avatar: {\n      height: 32,\n      width: 32\n    },\n    image: {\n      cursor: 'pointer',\n      height: 'auto',\n      maxWidth: '100%',\n      width: 380\n    }\n  };\n});\n\nvar MessageItem = function MessageItem(_ref) {\n  var className = _ref.className,\n      message = _ref.message,\n      thread = _ref.thread,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"message\", \"thread\"]);\n\n  var classes = useStyles();\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedImage = _useState2[0],\n      setSelectedImage = _useState2[1]; // Since chat mock db is not synced with external auth providers\n  // we set the user details from user auth state instead of thread participants\n\n\n  var sender = thread.participants.find(function (_participant) {\n    return _participant.id === message.senderId;\n  });\n  var senderDetails = message.senderId === '5e86809283e28b96d2d38537' ? {\n    avatar: user.avatar,\n    name: 'Me',\n    type: 'user'\n  } : {\n    avatar: sender.avatar,\n    name: sender.name,\n    type: 'contact'\n  };\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    maxWidth: 500,\n    ml: senderDetails.type === 'user' ? 'auto' : 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    src: senderDetails.avatar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    ml: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    bgcolor: senderDetails.type === 'user' ? 'secondary.main' : 'background.default',\n    borderRadius: \"borderRadius\",\n    boxShadow: 1,\n    color: senderDetails.type === 'user' ? 'secondary.contrastText' : 'text.primary',\n    px: 2,\n    py: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    color: \"inherit\",\n    component: RouterLink,\n    to: \"#\",\n    variant: \"h6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, senderDetails.name), /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, message.contentType === 'image' ? /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    onClick: function onClick() {\n      return setSelectedImage(message.body);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Attachment\",\n    className: classes.image,\n    src: message.body,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  }, message.body))), /*#__PURE__*/React.createElement(Box, {\n    mt: 1,\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    noWrap: true,\n    color: \"textSecondary\",\n    variant: \"caption\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, moment(message.createdAt).fromNow())))), selectedImage && /*#__PURE__*/React.createElement(Lightbox, {\n    large: selectedImage,\n    onClose: function onClose() {\n      return setSelectedImage(null);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }));\n};\n\nMessageItem.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.object.isRequired,\n  thread: PropTypes.object.isRequired\n};\nexport default MessageItem;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/views/chat/ChatView/Thread/MessageItem.js"],"names":["React","useState","Link","RouterLink","PropTypes","clsx","moment","Lightbox","Avatar","Box","Typography","makeStyles","useAuth","useStyles","theme","root","marginBottom","spacing","display","avatar","height","width","image","cursor","maxWidth","MessageItem","className","message","thread","rest","classes","user","selectedImage","setSelectedImage","sender","participants","find","_participant","id","senderId","senderDetails","name","type","contentType","body","createdAt","fromNow","propTypes","string","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { Lightbox } from 'react-modal-image';\nimport {\n  Avatar,\n  Box,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport useAuth from 'src/hooks/useAuth';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: theme.spacing(2),\n    display: 'flex'\n  },\n  avatar: {\n    height: 32,\n    width: 32\n  },\n  image: {\n    cursor: 'pointer',\n    height: 'auto',\n    maxWidth: '100%',\n    width: 380\n  }\n}));\n\nconst MessageItem = ({\n  className,\n  message,\n  thread,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const { user } = useAuth();\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  // Since chat mock db is not synced with external auth providers\n  // we set the user details from user auth state instead of thread participants\n  const sender = thread.participants.find((_participant) => _participant.id === message.senderId);\n  const senderDetails = message.senderId === '5e86809283e28b96d2d38537'\n    ? {\n      avatar: user.avatar,\n      name: 'Me',\n      type: 'user'\n    } : {\n      avatar: sender.avatar,\n      name: sender.name,\n      type: 'contact'\n    };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        maxWidth={500}\n        ml={senderDetails.type === 'user' ? 'auto' : 0}\n      >\n        <Avatar\n          className={classes.avatar}\n          src={senderDetails.avatar}\n        />\n        <Box ml={2}>\n          <Box\n            bgcolor={senderDetails.type === 'user' ? 'secondary.main' : 'background.default'}\n            borderRadius=\"borderRadius\"\n            boxShadow={1}\n            color={senderDetails.type === 'user' ? 'secondary.contrastText' : 'text.primary'}\n            px={2}\n            py={1}\n          >\n            <Link\n              color=\"inherit\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h6\"\n            >\n              {senderDetails.name}\n            </Link>\n            <Box mt={1}>\n              {message.contentType === 'image' ? (\n                <Box\n                  mt={2}\n                  onClick={() => setSelectedImage(message.body)}\n                >\n                  <img\n                    alt=\"Attachment\"\n                    className={classes.image}\n                    src={message.body}\n                  />\n                </Box>\n              ) : (\n                  <Typography\n                    color=\"inherit\"\n                    variant=\"body1\"\n                  >\n                    {message.body}\n                  </Typography>\n                )}\n            </Box>\n          </Box>\n          <Box\n            mt={1}\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n          >\n            <Typography\n              noWrap\n              color=\"textSecondary\"\n              variant=\"caption\"\n            >\n              {moment(message.createdAt).fromNow()}\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n      {selectedImage && (\n        <Lightbox\n          large={selectedImage}\n          onClose={() => setSelectedImage(null)}\n        />\n      )}\n    </div>\n  );\n};\n\nMessageItem.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.object.isRequired,\n  thread: PropTypes.object.isRequired\n};\n\nexport default MessageItem;\n"]},"metadata":{},"sourceType":"module"}