{"ast":null,"code":"import _regeneratorRuntime from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { createSlice } from '@reduxjs/toolkit';\nimport _ from 'lodash';\nimport axios from 'src/utils/axios';\nimport objFromArray from 'src/utils/objFromArray';\nvar initialState = {\n  isLoaded: false,\n  lists: {\n    byId: {},\n    allIds: []\n  },\n  cards: {\n    byId: {},\n    allIds: []\n  },\n  members: {\n    byId: {},\n    allIds: []\n  }\n};\nvar slice = createSlice({\n  name: 'kanban',\n  initialState: initialState,\n  reducers: {\n    getBoard: function getBoard(state, action) {\n      var board = action.payload.board;\n      state.lists.byId = objFromArray(board.lists);\n      state.lists.allIds = Object.keys(state.lists.byId);\n      state.cards.byId = objFromArray(board.cards);\n      state.cards.allIds = Object.keys(state.cards.byId);\n      state.members.byId = objFromArray(board.members);\n      state.members.allIds = Object.keys(state.members.byId);\n      state.isLoaded = true;\n    },\n    createList: function createList(state, action) {\n      var list = action.payload.list;\n      state.lists.byId[list.id] = list;\n      state.lists.allIds.push(list.id);\n    },\n    updateList: function updateList(state, action) {\n      var list = action.payload.list;\n      state.lists.byId[list.id] = list;\n    },\n    clearList: function clearList(state, action) {\n      var listId = action.payload.listId;\n      var cardIds = state.lists.byId[listId].cardIds;\n      state.lists.byId[listId].cardIds = [];\n      state.cards.byId = _.omit(state.cards.byId, cardIds);\n\n      _.pull.apply(_, [state.cards.allIds].concat(_toConsumableArray(cardIds)));\n    },\n    deleteList: function deleteList(state, action) {\n      var listId = action.payload.listId;\n      state.lists.byId = _.omit(state.lists.byId, listId);\n\n      _.pull(state.lists.allIds, listId);\n    },\n    createCard: function createCard(state, action) {\n      var card = action.payload.card;\n      state.cards.byId[card.id] = card;\n      state.cards.allIds.push(card.id);\n      state.lists.byId[card.listId].cardIds.push(card.id);\n    },\n    updateCard: function updateCard(state, action) {\n      var card = action.payload.card;\n\n      _.merge(state.cards.byId[card.id], card);\n    },\n    moveCard: function moveCard(state, action) {\n      var _action$payload = action.payload,\n          cardId = _action$payload.cardId,\n          position = _action$payload.position,\n          listId = _action$payload.listId;\n      var sourceListId = state.cards.byId[cardId].listId; // Remove card from source list\n\n      _.pull(state.lists.byId[sourceListId].cardIds, cardId); // If listId arg exists, it means that\n      // we have to add the card to the new list\n\n\n      if (listId) {\n        state.cards.byId[cardId].listId = listId;\n        state.lists.byId[listId].cardIds.splice(position, 0, cardId);\n      } else {\n        state.lists.byId[sourceListId].cardIds.splice(position, 0, cardId);\n      }\n    },\n    deleteCard: function deleteCard(state, action) {\n      var cardId = action.payload.cardId;\n      var listId = state.cards.byId[cardId].listId;\n      state.cards.byId = _.omit(state.cards.byId, cardId);\n\n      _.pull(state.cards.allIds, cardId);\n\n      _.pull(state.lists.byId[listId].cardIds, cardId);\n    },\n    addComment: function addComment(state, action) {\n      var comment = action.payload.comment;\n      var card = state.cards.byId[comment.cardId];\n      card.comments.push(comment);\n    },\n    addChecklist: function addChecklist(state, action) {\n      var _action$payload2 = action.payload,\n          cardId = _action$payload2.cardId,\n          checklist = _action$payload2.checklist;\n      var card = state.cards.byId[cardId];\n      card.checklists.push(checklist);\n    },\n    updateChecklist: function updateChecklist(state, action) {\n      var _action$payload3 = action.payload,\n          cardId = _action$payload3.cardId,\n          checklist = _action$payload3.checklist;\n      var card = state.cards.byId[cardId];\n      card.checklists = _.map(card.checklists, function (_checklist) {\n        if (_checklist.id === checklist.id) {\n          return checklist;\n        }\n\n        return _checklist;\n      });\n    },\n    deleteChecklist: function deleteChecklist(state, action) {\n      var _action$payload4 = action.payload,\n          cardId = _action$payload4.cardId,\n          checklistId = _action$payload4.checklistId;\n      var card = state.cards.byId[cardId];\n      card.checklists = _.reject(card.checklists, {\n        id: checklistId\n      });\n    },\n    addCheckItem: function addCheckItem(state, action) {\n      var _action$payload5 = action.payload,\n          cardId = _action$payload5.cardId,\n          checklistId = _action$payload5.checklistId,\n          checkItem = _action$payload5.checkItem;\n      var card = state.cards.byId[cardId];\n\n      _.assign(card, {\n        checklists: _.map(card.checklists, function (checklist) {\n          if (checklist.id === checklistId) {\n            _.assign(checklist, {\n              checkItems: [].concat(_toConsumableArray(checklist.checkItems), [checkItem])\n            });\n          }\n\n          return checklist;\n        })\n      });\n    },\n    updateCheckItem: function updateCheckItem(state, action) {\n      var _action$payload6 = action.payload,\n          cardId = _action$payload6.cardId,\n          checklistId = _action$payload6.checklistId,\n          checkItem = _action$payload6.checkItem;\n      var card = state.cards.byId[cardId];\n      card.checklists = _.map(card.checklists, function (checklist) {\n        if (checklist.id === checklistId) {\n          _.assign(checklist, {\n            checkItems: _.map(checklist.checkItems, function (_checkItem) {\n              if (_checkItem.id === checkItem.id) {\n                return checkItem;\n              }\n\n              return _checkItem;\n            })\n          });\n        }\n\n        return checklist;\n      });\n    },\n    deleteCheckItem: function deleteCheckItem(state, action) {\n      var _action$payload7 = action.payload,\n          cardId = _action$payload7.cardId,\n          checklistId = _action$payload7.checklistId,\n          checkItemId = _action$payload7.checkItemId;\n      var card = state.cards.byId[cardId];\n      card.checklists = _.map(card.checklists, function (checklist) {\n        if (checklist.id === checklistId) {\n          _.assign(checklist, {\n            checkItems: _.reject(checklist.checkItems, {\n              id: checkItemId\n            })\n          });\n        }\n\n        return checklist;\n      });\n    }\n  }\n});\nexport var reducer = slice.reducer;\nexport var getBoard = function getBoard() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get('/api/kanban/board');\n\n            case 2:\n              response = _context.sent;\n              dispatch(slice.actions.getBoard(response.data));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var createList = function createList(name) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return axios.post('/api/kanban/lists/new', {\n                name: name\n              });\n\n            case 2:\n              response = _context2.sent;\n              dispatch(slice.actions.createList(response.data));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var updateList = function updateList(listId, update) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return axios.post('/api/kanban/list/update', {\n                listId: listId,\n                update: update\n              });\n\n            case 2:\n              response = _context3.sent;\n              dispatch(slice.actions.updateList(response.data));\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var clearList = function clearList(listId) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return axios.post('/api/kanban/lists/clear', {\n                listId: listId\n              });\n\n            case 2:\n              dispatch(slice.actions.clearList({\n                listId: listId\n              }));\n\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteList = function deleteList(listId) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return axios.post('/api/kanban/lists/remove', {\n                listId: listId\n              });\n\n            case 2:\n              dispatch(slice.actions.deleteList({\n                listId: listId\n              }));\n\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x5) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport var createCard = function createCard(listId, name) {\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return axios.post('/api/kanban/cards/new', {\n                listId: listId,\n                name: name\n              });\n\n            case 2:\n              response = _context6.sent;\n              dispatch(slice.actions.createCard(response.data));\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};\nexport var updateCard = function updateCard(cardId, update) {\n  return /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return axios.post('/api/kanban/cards/update', {\n                cardId: cardId,\n                update: update\n              });\n\n            case 2:\n              response = _context7.sent;\n              dispatch(slice.actions.updateCard(response.data));\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }));\n\n    return function (_x7) {\n      return _ref7.apply(this, arguments);\n    };\n  }();\n};\nexport var moveCard = function moveCard(cardId, position, listId) {\n  return /*#__PURE__*/function () {\n    var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return axios.post('/api/kanban/cards/move', {\n                cardId: cardId,\n                position: position,\n                listId: listId\n              });\n\n            case 2:\n              dispatch(slice.actions.moveCard({\n                cardId: cardId,\n                position: position,\n                listId: listId\n              }));\n\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function (_x8) {\n      return _ref8.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteCard = function deleteCard(cardId) {\n  return /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee9(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return axios.post('/api/kanban/cards/remove', {\n                cardId: cardId\n              });\n\n            case 2:\n              dispatch(slice.actions.deleteCard({\n                cardId: cardId\n              }));\n\n            case 3:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      }, _callee9);\n    }));\n\n    return function (_x9) {\n      return _ref9.apply(this, arguments);\n    };\n  }();\n};\nexport var addComment = function addComment(cardId, message) {\n  return /*#__PURE__*/function () {\n    var _ref10 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee10(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return axios.post('/api/kanban/comments/new', {\n                cardId: cardId,\n                message: message\n              });\n\n            case 2:\n              response = _context10.sent;\n              dispatch(slice.actions.addComment(response.data));\n\n            case 4:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      }, _callee10);\n    }));\n\n    return function (_x10) {\n      return _ref10.apply(this, arguments);\n    };\n  }();\n};\nexport var addChecklist = function addChecklist(cardId, name) {\n  return /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee11(dispatch) {\n      var response, checklist;\n      return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return axios.post('/api/kanban/checklists/new', {\n                cardId: cardId,\n                name: name\n              });\n\n            case 2:\n              response = _context11.sent;\n              checklist = response.data.checklist;\n              dispatch(slice.actions.addChecklist({\n                cardId: cardId,\n                checklist: checklist\n              }));\n\n            case 5:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee11);\n    }));\n\n    return function (_x11) {\n      return _ref11.apply(this, arguments);\n    };\n  }();\n};\nexport var updateChecklist = function updateChecklist(cardId, checklistId, update) {\n  return /*#__PURE__*/function () {\n    var _ref12 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee12(dispatch) {\n      var response, checklist;\n      return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n        while (1) {\n          switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return axios.post('/api/kanban/checklists/update', {\n                cardId: cardId,\n                checklistId: checklistId,\n                update: update\n              });\n\n            case 2:\n              response = _context12.sent;\n              checklist = response.data.checklist;\n              dispatch(slice.actions.updateChecklist({\n                cardId: cardId,\n                checklist: checklist\n              }));\n\n            case 5:\n            case \"end\":\n              return _context12.stop();\n          }\n        }\n      }, _callee12);\n    }));\n\n    return function (_x12) {\n      return _ref12.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteChecklist = function deleteChecklist(cardId, checklistId) {\n  return /*#__PURE__*/function () {\n    var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee13(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n        while (1) {\n          switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.next = 2;\n              return axios.post('/api/kanban/checklists/remove', {\n                cardId: cardId,\n                checklistId: checklistId\n              });\n\n            case 2:\n              dispatch(slice.actions.deleteChecklist({\n                cardId: cardId,\n                checklistId: checklistId\n              }));\n\n            case 3:\n            case \"end\":\n              return _context13.stop();\n          }\n        }\n      }, _callee13);\n    }));\n\n    return function (_x13) {\n      return _ref13.apply(this, arguments);\n    };\n  }();\n};\nexport var addCheckItem = function addCheckItem(cardId, checklistId, name) {\n  return /*#__PURE__*/function () {\n    var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee14(dispatch) {\n      var response, checkItem;\n      return _regeneratorRuntime.wrap(function _callee14$(_context14) {\n        while (1) {\n          switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.next = 2;\n              return axios.post('/api/kanban/checkitems/new', {\n                cardId: cardId,\n                checklistId: checklistId,\n                name: name\n              });\n\n            case 2:\n              response = _context14.sent;\n              checkItem = response.data.checkItem;\n              dispatch(slice.actions.addCheckItem({\n                cardId: cardId,\n                checklistId: checklistId,\n                checkItem: checkItem\n              }));\n\n            case 5:\n            case \"end\":\n              return _context14.stop();\n          }\n        }\n      }, _callee14);\n    }));\n\n    return function (_x14) {\n      return _ref14.apply(this, arguments);\n    };\n  }();\n};\nexport var updateCheckItem = function updateCheckItem(cardId, checklistId, checkItemId, update) {\n  return /*#__PURE__*/function () {\n    var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee15(dispatch) {\n      var response, checkItem;\n      return _regeneratorRuntime.wrap(function _callee15$(_context15) {\n        while (1) {\n          switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.next = 2;\n              return axios.post('/api/kanban/checkitems/update', {\n                cardId: cardId,\n                checklistId: checklistId,\n                checkItemId: checkItemId,\n                update: update\n              });\n\n            case 2:\n              response = _context15.sent;\n              checkItem = response.data.checkItem;\n              dispatch(slice.actions.updateCheckItem({\n                cardId: cardId,\n                checklistId: checklistId,\n                checkItem: checkItem\n              }));\n\n            case 5:\n            case \"end\":\n              return _context15.stop();\n          }\n        }\n      }, _callee15);\n    }));\n\n    return function (_x15) {\n      return _ref15.apply(this, arguments);\n    };\n  }();\n};\nexport var deleteCheckItem = function deleteCheckItem(cardId, checklistId, checkItemId) {\n  return /*#__PURE__*/function () {\n    var _ref16 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee16(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee16$(_context16) {\n        while (1) {\n          switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.next = 2;\n              return axios.post('/api/kanban/checkitems/remove', {\n                cardId: cardId,\n                checklistId: checklistId,\n                checkItemId: checkItemId\n              });\n\n            case 2:\n              dispatch(slice.actions.deleteCheckItem({\n                cardId: cardId,\n                checklistId: checklistId,\n                checkItemId: checkItemId\n              }));\n\n            case 3:\n            case \"end\":\n              return _context16.stop();\n          }\n        }\n      }, _callee16);\n    }));\n\n    return function (_x16) {\n      return _ref16.apply(this, arguments);\n    };\n  }();\n};\nexport default slice;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/slices/kanban.js"],"names":["createSlice","_","axios","objFromArray","initialState","isLoaded","lists","byId","allIds","cards","members","slice","name","reducers","getBoard","state","action","board","payload","Object","keys","createList","list","id","push","updateList","clearList","listId","cardIds","omit","pull","deleteList","createCard","card","updateCard","merge","moveCard","cardId","position","sourceListId","splice","deleteCard","addComment","comment","comments","addChecklist","checklist","checklists","updateChecklist","map","_checklist","deleteChecklist","checklistId","reject","addCheckItem","checkItem","assign","checkItems","updateCheckItem","_checkItem","deleteCheckItem","checkItemId","reducer","dispatch","get","response","actions","data","post","update","message"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport _ from 'lodash';\nimport axios from 'src/utils/axios';\nimport objFromArray from 'src/utils/objFromArray';\n\nconst initialState = {\n  isLoaded: false,\n  lists: {\n    byId: {},\n    allIds: []\n  },\n  cards: {\n    byId: {},\n    allIds: []\n  },\n  members: {\n    byId: {},\n    allIds: []\n  }\n};\n\nconst slice = createSlice({\n  name: 'kanban',\n  initialState,\n  reducers: {\n    getBoard(state, action) {\n      const { board } = action.payload;\n\n      state.lists.byId = objFromArray(board.lists);\n      state.lists.allIds = Object.keys(state.lists.byId);\n      state.cards.byId = objFromArray(board.cards);\n      state.cards.allIds = Object.keys(state.cards.byId);\n      state.members.byId = objFromArray(board.members);\n      state.members.allIds = Object.keys(state.members.byId);\n      state.isLoaded = true;\n    },\n    createList(state, action) {\n      const { list } = action.payload;\n\n      state.lists.byId[list.id] = list;\n      state.lists.allIds.push(list.id);\n    },\n    updateList(state, action) {\n      const { list } = action.payload;\n\n      state.lists.byId[list.id] = list;\n    },\n    clearList(state, action) {\n      const { listId } = action.payload;\n      const { cardIds } = state.lists.byId[listId];\n\n      state.lists.byId[listId].cardIds = [];\n      state.cards.byId = _.omit(state.cards.byId, cardIds);\n      _.pull(state.cards.allIds, ...cardIds);\n    },\n    deleteList(state, action) {\n      const { listId } = action.payload;\n\n      state.lists.byId = _.omit(state.lists.byId, listId);\n      _.pull(state.lists.allIds, listId);\n    },\n    createCard(state, action) {\n      const { card } = action.payload;\n\n      state.cards.byId[card.id] = card;\n      state.cards.allIds.push(card.id);\n      state.lists.byId[card.listId].cardIds.push(card.id);\n    },\n    updateCard(state, action) {\n      const { card } = action.payload;\n\n      _.merge(state.cards.byId[card.id], card);\n    },\n    moveCard(state, action) {\n      const { cardId, position, listId } = action.payload;\n      const { listId: sourceListId } = state.cards.byId[cardId];\n\n      // Remove card from source list\n      _.pull(state.lists.byId[sourceListId].cardIds, cardId);\n\n      // If listId arg exists, it means that\n      // we have to add the card to the new list\n      if (listId) {\n        state.cards.byId[cardId].listId = listId;\n        state.lists.byId[listId].cardIds.splice(position, 0, cardId);\n      } else {\n        state.lists.byId[sourceListId].cardIds.splice(position, 0, cardId);\n      }\n    },\n    deleteCard(state, action) {\n      const { cardId } = action.payload;\n      const { listId } = state.cards.byId[cardId];\n\n      state.cards.byId = _.omit(state.cards.byId, cardId);\n      _.pull(state.cards.allIds, cardId);\n      _.pull(state.lists.byId[listId].cardIds, cardId);\n    },\n    addComment(state, action) {\n      const { comment } = action.payload;\n      const card = state.cards.byId[comment.cardId];\n\n      card.comments.push(comment);\n    },\n    addChecklist(state, action) {\n      const { cardId, checklist } = action.payload;\n      const card = state.cards.byId[cardId];\n\n      card.checklists.push(checklist);\n    },\n    updateChecklist(state, action) {\n      const { cardId, checklist } = action.payload;\n      const card = state.cards.byId[cardId];\n\n      card.checklists = _.map(card.checklists, (_checklist) => {\n        if (_checklist.id === checklist.id) {\n          return checklist;\n        }\n\n        return _checklist;\n      });\n    },\n    deleteChecklist(state, action) {\n      const { cardId, checklistId } = action.payload;\n      const card = state.cards.byId[cardId];\n\n      card.checklists = _.reject(card.checklists, { id: checklistId });\n    },\n    addCheckItem(state, action) {\n      const { cardId, checklistId, checkItem } = action.payload;\n      const card = state.cards.byId[cardId];\n\n      _.assign(card, {\n        checklists: _.map(card.checklists, (checklist) => {\n          if (checklist.id === checklistId) {\n            _.assign(checklist, {\n              checkItems: [...checklist.checkItems, checkItem]\n            });\n          }\n\n          return checklist;\n        })\n      });\n    },\n    updateCheckItem(state, action) {\n      const {\n        cardId,\n        checklistId,\n        checkItem\n      } = action.payload;\n      const card = state.cards.byId[cardId];\n\n      card.checklists = _.map(card.checklists, (checklist) => {\n        if (checklist.id === checklistId) {\n          _.assign(checklist, {\n            checkItems: _.map(checklist.checkItems, (_checkItem) => {\n              if (_checkItem.id === checkItem.id) {\n                return checkItem;\n              }\n\n              return _checkItem;\n            })\n          });\n        }\n\n        return checklist;\n      });\n    },\n    deleteCheckItem(state, action) {\n      const { cardId, checklistId, checkItemId } = action.payload;\n      const card = state.cards.byId[cardId];\n\n      card.checklists = _.map(card.checklists, (checklist) => {\n        if (checklist.id === checklistId) {\n          _.assign(checklist, {\n            checkItems: _.reject(checklist.checkItems, { id: checkItemId })\n          });\n        }\n\n        return checklist;\n      });\n    }\n  }\n});\n\nexport const reducer = slice.reducer;\n\nexport const getBoard = () => async (dispatch) => {\n  const response = await axios.get('/api/kanban/board');\n\n  dispatch(slice.actions.getBoard(response.data));\n};\n\nexport const createList = (name) => async (dispatch) => {\n  const response = await axios.post('/api/kanban/lists/new', {\n    name\n  });\n\n  dispatch(slice.actions.createList(response.data));\n};\n\nexport const updateList = (listId, update) => async (dispatch) => {\n  const response = await axios.post('/api/kanban/list/update', {\n    listId,\n    update\n  });\n\n  dispatch(slice.actions.updateList(response.data));\n};\n\nexport const clearList = (listId) => async (dispatch) => {\n  await axios.post('/api/kanban/lists/clear', {\n    listId\n  });\n\n  dispatch(slice.actions.clearList({ listId }));\n};\n\nexport const deleteList = (listId) => async (dispatch) => {\n  await axios.post('/api/kanban/lists/remove', {\n    listId\n  });\n\n  dispatch(slice.actions.deleteList({ listId }));\n};\n\nexport const createCard = (listId, name) => async (dispatch) => {\n  const response = await axios.post('/api/kanban/cards/new', {\n    listId,\n    name\n  });\n\n  dispatch(slice.actions.createCard(response.data));\n};\n\nexport const updateCard = (cardId, update) => async (dispatch) => {\n  const response = await axios.post('/api/kanban/cards/update', {\n    cardId,\n    update\n  });\n\n  dispatch(slice.actions.updateCard(response.data));\n};\n\nexport const moveCard = (cardId, position, listId) => async (dispatch) => {\n  await axios.post('/api/kanban/cards/move', {\n    cardId,\n    position,\n    listId\n  });\n\n  dispatch(slice.actions.moveCard({\n    cardId,\n    position,\n    listId\n  }));\n};\n\nexport const deleteCard = (cardId) => async (dispatch) => {\n  await axios.post('/api/kanban/cards/remove', {\n    cardId\n  });\n\n  dispatch(slice.actions.deleteCard({ cardId }));\n};\n\nexport const addComment = (cardId, message) => async (dispatch) => {\n  const response = await axios.post('/api/kanban/comments/new', {\n    cardId,\n    message\n  });\n\n  dispatch(slice.actions.addComment(response.data));\n};\n\nexport const addChecklist = (cardId, name) => async (dispatch) => {\n  const response = await axios.post('/api/kanban/checklists/new', {\n    cardId,\n    name\n  });\n  const { checklist } = response.data;\n\n  dispatch(slice.actions.addChecklist({\n    cardId,\n    checklist\n  }));\n};\n\nexport const updateChecklist = (cardId, checklistId, update) => async (dispatch) => {\n  const response = await axios.post('/api/kanban/checklists/update', {\n    cardId,\n    checklistId,\n    update\n  });\n  const { checklist } = response.data;\n\n  dispatch(slice.actions.updateChecklist({\n    cardId,\n    checklist\n  }));\n};\n\nexport const deleteChecklist = (cardId, checklistId) => async (dispatch) => {\n  await axios.post('/api/kanban/checklists/remove', {\n    cardId,\n    checklistId\n  });\n\n  dispatch(slice.actions.deleteChecklist({\n    cardId,\n    checklistId\n  }));\n};\n\nexport const addCheckItem = (cardId, checklistId, name) => async (dispatch) => {\n  const response = await axios.post('/api/kanban/checkitems/new', {\n    cardId,\n    checklistId,\n    name\n  });\n  const { checkItem } = response.data;\n\n  dispatch(slice.actions.addCheckItem({\n    cardId,\n    checklistId,\n    checkItem\n  }));\n};\n\nexport const updateCheckItem = (cardId, checklistId, checkItemId, update) => async (dispatch) => {\n  const response = await axios.post('/api/kanban/checkitems/update', {\n    cardId,\n    checklistId,\n    checkItemId,\n    update\n  });\n  const { checkItem } = response.data;\n\n  dispatch(slice.actions.updateCheckItem({\n    cardId,\n    checklistId,\n    checkItem\n  }));\n};\n\nexport const deleteCheckItem = (cardId, checklistId, checkItemId) => async (dispatch) => {\n  await axios.post('/api/kanban/checkitems/remove', {\n    cardId,\n    checklistId,\n    checkItemId\n  });\n\n  dispatch(slice.actions.deleteCheckItem({\n    cardId,\n    checklistId,\n    checkItemId\n  }));\n};\n\nexport default slice;\n"]},"metadata":{},"sourceType":"module"}