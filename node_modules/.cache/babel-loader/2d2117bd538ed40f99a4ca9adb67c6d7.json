{"ast":null,"code":"import _extends from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/craigcronin/Development/applestooapples_web_template/src/views/project/ProjectDetailsView/Reviews/OverallReviews.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Box, Card, CardContent, Grid, Typography, makeStyles } from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    rating: {\n      marginLeft: theme.spacing(2),\n      fontWeight: theme.typography.fontWeightBold\n    }\n  };\n});\n\nvar OverallReviews = function OverallReviews(_ref) {\n  var className = _ref.className,\n      rating = _ref.rating,\n      reviewsCount = _ref.reviewsCount,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"rating\", \"reviewsCount\"]);\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, _extends({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    alignItems: \"center\",\n    container: true,\n    spacing: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"textPrimary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Overall Reviews\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Rating, {\n    value: rating,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.rating,\n    variant: \"h6\",\n    color: \"textPrimary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, rating.toFixed(1)))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, reviewsCount, ' ', \"reviews in total\")))));\n};\n\nOverallReviews.propTypes = {\n  className: PropTypes.string,\n  rating: PropTypes.number.isRequired,\n  reviewsCount: PropTypes.number.isRequired\n};\nexport default OverallReviews;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/views/project/ProjectDetailsView/Reviews/OverallReviews.js"],"names":["React","PropTypes","clsx","Box","Card","CardContent","Grid","Typography","makeStyles","Rating","useStyles","theme","root","rating","marginLeft","spacing","fontWeight","typography","fontWeightBold","OverallReviews","className","reviewsCount","rest","classes","toFixed","propTypes","string","number","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SACEC,GADF,EAEEC,IAFF,EAGEC,WAHF,EAIEC,IAJF,EAKEC,UALF,EAMEC,UANF,QAOO,mBAPP;AAQA,SAASC,MAAT,QAAuB,kBAAvB;AAEA,IAAMC,SAAS,GAAGF,UAAU,CAAC,UAACG,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE,EADiC;AAEvCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,UAAU,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CADN;AAENC,MAAAA,UAAU,EAAEL,KAAK,CAACM,UAAN,CAAiBC;AAFvB;AAF+B,GAAZ;AAAA,CAAD,CAA5B;;AAQA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAKjB;AAAA,MAJJC,SAII,QAJJA,SAII;AAAA,MAHJP,MAGI,QAHJA,MAGI;AAAA,MAFJQ,YAEI,QAFJA,YAEI;AAAA,MADDC,IACC;;AACJ,MAAMC,OAAO,GAAGb,SAAS,EAAzB;AAEA,sBACE,oBAAC,IAAD;AACE,IAAA,SAAS,EAAER,IAAI,CAACqB,OAAO,CAACX,IAAT,EAAeQ,SAAf;AADjB,KAEME,IAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AACE,IAAA,UAAU,EAAC,QADb;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,OAAO,EAAE,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,OAAO,EAAC,IADV;AAEE,IAAA,KAAK,EAAC,aAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CALF,eAaE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,UAAU,EAAC,QAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAET,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,UAAD;AACE,IAAA,SAAS,EAAEU,OAAO,CAACV,MADrB;AAEE,IAAA,OAAO,EAAC,IAFV;AAGE,IAAA,KAAK,EAAC,aAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGA,MAAM,CAACW,OAAP,CAAe,CAAf,CALH,CALF,CADF,CAbF,eA4BE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,OAAO,EAAC,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGH,YAJH,EAKG,GALH,qBADF,CA5BF,CADF,CAJF,CADF;AAgDD,CAxDD;;AA0DAF,cAAc,CAACM,SAAf,GAA2B;AACzBL,EAAAA,SAAS,EAAEnB,SAAS,CAACyB,MADI;AAEzBb,EAAAA,MAAM,EAAEZ,SAAS,CAAC0B,MAAV,CAAiBC,UAFA;AAGzBP,EAAAA,YAAY,EAAEpB,SAAS,CAAC0B,MAAV,CAAiBC;AAHN,CAA3B;AAMA,eAAeT,cAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Rating } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  rating: {\n    marginLeft: theme.spacing(2),\n    fontWeight: theme.typography.fontWeightBold\n  }\n}));\n\nconst OverallReviews = ({\n  className,\n  rating,\n  reviewsCount,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Grid\n          alignItems=\"center\"\n          container\n          spacing={3}\n        >\n          <Grid item>\n            <Typography\n              variant=\"h5\"\n              color=\"textPrimary\"\n            >\n              Overall Reviews\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              <Rating value={rating} />\n              <Typography\n                className={classes.rating}\n                variant=\"h6\"\n                color=\"textPrimary\"\n              >\n                {rating.toFixed(1)}\n              </Typography>\n            </Box>\n          </Grid>\n          <Grid item>\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              {reviewsCount}\n              {' '}\n              reviews in total\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nOverallReviews.propTypes = {\n  className: PropTypes.string,\n  rating: PropTypes.number.isRequired,\n  reviewsCount: PropTypes.number.isRequired\n};\n\nexport default OverallReviews;\n"]},"metadata":{},"sourceType":"module"}