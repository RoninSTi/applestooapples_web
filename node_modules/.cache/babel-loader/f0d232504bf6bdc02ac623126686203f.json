{"ast":null,"code":"import _regeneratorRuntime from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createSlice } from '@reduxjs/toolkit';\nimport api from 'src/utils/api';\nvar initialState = {\n  accounts: [],\n  activeAccount: null\n};\nvar slice = createSlice({\n  name: 'account',\n  initialState: initialState,\n  reducers: {\n    getAccount: function getAccount(state, action) {\n      var account = action.payload.account;\n      state.activeAccount = account;\n    },\n    getAccounts: function getAccounts(state, action) {\n      var accounts = action.payload.accounts;\n      state.accounts = accounts;\n\n      if (!state.activeAccount) {\n        state.activeAccount = accounts[0];\n      } else {\n        var updatedActiveAccount = accounts.find(function (account) {\n          return account.id === state.activeAccount.id;\n        });\n        state.activeAccount = updatedActiveAccount;\n      }\n    },\n    createAccount: function createAccount(state, action) {\n      var account = action.payload.account;\n      state.activeAccount = account;\n    },\n    inviteUser: function inviteUser(state, action) {\n      var account = action.payload.account;\n      state.accounts = state.accounts.map(function (existingAccount) {\n        return existingAccount.id === account.id ? account : existingAccount;\n      });\n      state.activeAccount = account;\n    },\n    updateAccount: function updateAccount(state, action) {\n      var account = action.payload.account;\n      state.activeAccount = account;\n    }\n  }\n});\nexport var reducer = slice.reducer;\nexport var getAccount = function getAccount(id) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return api.get(\"account/\".concat(id));\n\n            case 2:\n              response = _context.sent;\n              dispatch(slice.actions.getAccount({\n                account: response.data\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getAccounts = function getAccounts() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return api.get(\"accounts/me\");\n\n            case 2:\n              response = _context2.sent;\n              dispatch(slice.actions.getAccounts({\n                accounts: response.data\n              }));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var createAccount = function createAccount(data) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return api({\n                method: 'post',\n                url: 'account',\n                data: data\n              });\n\n            case 2:\n              response = _context3.sent;\n              dispatch(slice.actions.createEvent(response.data));\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var inviteUser = function inviteUser(data, accountId) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return api({\n                method: 'post',\n                url: \"account/\".concat(accountId, \"/user/add\"),\n                data: data\n              });\n\n            case 2:\n              response = _context4.sent;\n              dispatch(slice.actions.inviteUser({\n                account: response.data\n              }));\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport default slice;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/slices/account.js"],"names":["createSlice","api","initialState","accounts","activeAccount","slice","name","reducers","getAccount","state","action","account","payload","getAccounts","updatedActiveAccount","find","id","createAccount","inviteUser","map","existingAccount","updateAccount","reducer","dispatch","get","response","actions","data","method","url","createEvent","accountId"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport api from 'src/utils/api';\n\nconst initialState = {\n  accounts: [],\n  activeAccount: null\n};\n\nconst slice = createSlice({\n  name: 'account',\n  initialState,\n  reducers: {\n    getAccount(state, action) {\n      const { account } = action.payload;\n\n      state.activeAccount = account;\n    },\n    getAccounts(state, action) {\n      const { accounts } = action.payload;\n\n      state.accounts = accounts\n\n      if (!state.activeAccount) {\n        state.activeAccount = accounts[0]\n      } else {\n        const updatedActiveAccount = accounts.find(account => account.id === state.activeAccount.id)\n\n        state.activeAccount = updatedActiveAccount\n      }\n    },\n    createAccount(state, action) {\n      const { account } = action.payload;\n\n      state.activeAccount = account;\n    },\n    inviteUser(state, action) {\n      const { account } = action.payload\n\n      state.accounts = state.accounts.map(existingAccount => existingAccount.id === account.id ? account : existingAccount)\n\n      state.activeAccount = account;\n    },\n    updateAccount(state, action) {\n      const { account } = action.payload;\n\n      state.activeAccount = account\n    }\n  }\n});\n\nexport const reducer = slice.reducer;\n\nexport const getAccount = (id) => async (dispatch) => {\n  const response = await api.get(`account/${id}`);\n\n  dispatch(slice.actions.getAccount({ account: response.data }));\n};\n\nexport const getAccounts = () => async (dispatch) => {\n  const response = await api.get(`accounts/me`);\n\n  dispatch(slice.actions.getAccounts({ accounts: response.data }));\n};\n\nexport const createAccount = (data) => async (dispatch) => {\n  const response = await api({\n    method: 'post',\n    url: 'account',\n    data\n  });\n\n  dispatch(slice.actions.createEvent(response.data));\n};\n\nexport const inviteUser = (data, accountId) => async dispatch => {\n  const response = await api({\n    method: 'post',\n    url: `account/${accountId}/user/add`,\n    data\n  })\n\n  dispatch(slice.actions.inviteUser({ account: response.data }))\n}\n\nexport default slice;\n"]},"metadata":{},"sourceType":"module"}