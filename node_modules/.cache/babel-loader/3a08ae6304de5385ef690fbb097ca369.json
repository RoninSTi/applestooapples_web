{"ast":null,"code":"import _slicedToArray from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/craigcronin/Development/applestooapples_web_template/src/layouts/DashboardLayout/TopBar/Notifications.js\";\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Avatar, Box, Button, IconButton, List, ListItem, ListItemAvatar, ListItemText, Popover, SvgIcon, Tooltip, Typography, makeStyles } from '@material-ui/core';\nimport { Bell as BellIcon, Package as PackageIcon, MessageCircle as MessageIcon, Truck as TruckIcon } from 'react-feather';\nimport { useDispatch, useSelector } from 'src/store';\nimport { getNotifications } from 'src/slices/notification';\nvar iconsMap = {\n  order_placed: PackageIcon,\n  new_message: MessageIcon,\n  item_shipped: TruckIcon\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    popover: {\n      width: 320\n    },\n    icon: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    }\n  };\n});\n\nvar Notifications = function Notifications() {\n  var classes = useStyles();\n\n  var _useSelector = useSelector(function (state) {\n    return state.notifications;\n  }),\n      notifications = _useSelector.notifications;\n\n  var ref = useRef(null);\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setOpen = _useState2[1];\n\n  var handleOpen = function handleOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  useEffect(function () {\n    dispatch(getNotifications());\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Notifications\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    ref: ref,\n    onClick: handleOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SvgIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BellIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Popover, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    classes: {\n      paper: classes.popover\n    },\n    anchorEl: ref.current,\n    onClose: handleClose,\n    open: isOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    p: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    color: \"textPrimary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Notifications\")), notifications.length === 0 ? /*#__PURE__*/React.createElement(Box, {\n    p: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"textPrimary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"There are no notifications\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(List, {\n    disablePadding: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, notifications.map(function (notification) {\n    var Icon = iconsMap[notification.type];\n    return /*#__PURE__*/React.createElement(ListItem, {\n      component: RouterLink,\n      divider: true,\n      key: notification.id,\n      to: \"#\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: classes.icon,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(SvgIcon, {\n      fontSize: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: notification.title,\n      primaryTypographyProps: {\n        variant: 'subtitle2',\n        color: 'textPrimary'\n      },\n      secondary: notification.description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(Box, {\n    p: 1,\n    display: \"flex\",\n    justifyContent: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    component: RouterLink,\n    size: \"small\",\n    to: \"#\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 15\n    }\n  }, \"Mark all as read\")))));\n};\n\nexport default Notifications;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/layouts/DashboardLayout/TopBar/Notifications.js"],"names":["React","useRef","useState","useEffect","Link","RouterLink","Avatar","Box","Button","IconButton","List","ListItem","ListItemAvatar","ListItemText","Popover","SvgIcon","Tooltip","Typography","makeStyles","Bell","BellIcon","Package","PackageIcon","MessageCircle","MessageIcon","Truck","TruckIcon","useDispatch","useSelector","getNotifications","iconsMap","order_placed","new_message","item_shipped","useStyles","theme","popover","width","icon","backgroundColor","palette","secondary","main","color","contrastText","Notifications","classes","state","notifications","ref","dispatch","isOpen","setOpen","handleOpen","handleClose","vertical","horizontal","paper","current","length","map","notification","Icon","type","id","title","variant","description"],"mappings":"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","sourcesContent":["import React, {\n  useRef,\n  useState,\n  useEffect\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Avatar,\n  Box,\n  Button,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Popover,\n  SvgIcon,\n  Tooltip,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Bell as BellIcon,\n  Package as PackageIcon,\n  MessageCircle as MessageIcon,\n  Truck as TruckIcon\n} from 'react-feather';\nimport { useDispatch, useSelector } from 'src/store';\nimport { getNotifications } from 'src/slices/notification';\n\nconst iconsMap = {\n  order_placed: PackageIcon,\n  new_message: MessageIcon,\n  item_shipped: TruckIcon\n};\n\nconst useStyles = makeStyles((theme) => ({\n  popover: {\n    width: 320\n  },\n  icon: {\n    backgroundColor: theme.palette.secondary.main,\n    color: theme.palette.secondary.contrastText\n  }\n}));\n\nconst Notifications = () => {\n  const classes = useStyles();\n  const { notifications } = useSelector((state) => state.notifications);\n  const ref = useRef(null);\n  const dispatch = useDispatch();\n  const [isOpen, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(getNotifications());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Tooltip title=\"Notifications\">\n        <IconButton\n          color=\"inherit\"\n          ref={ref}\n          onClick={handleOpen}\n        >\n          <SvgIcon>\n            <BellIcon />\n          </SvgIcon>\n        </IconButton>\n      </Tooltip>\n      <Popover\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center'\n        }}\n        classes={{ paper: classes.popover }}\n        anchorEl={ref.current}\n        onClose={handleClose}\n        open={isOpen}\n      >\n        <Box p={2}>\n          <Typography\n            variant=\"h5\"\n            color=\"textPrimary\"\n          >\n            Notifications\n          </Typography>\n        </Box>\n        {notifications.length === 0 ? (\n          <Box p={2}>\n            <Typography\n              variant=\"h6\"\n              color=\"textPrimary\"\n            >\n              There are no notifications\n            </Typography>\n          </Box>\n        ) : (\n          <>\n            <List disablePadding>\n              {notifications.map((notification) => {\n                const Icon = iconsMap[notification.type];\n\n                return (\n                  <ListItem\n                    component={RouterLink}\n                    divider\n                    key={notification.id}\n                    to=\"#\"\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        className={classes.icon}\n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <Icon />\n                        </SvgIcon>\n                      </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={notification.title}\n                      primaryTypographyProps={{ variant: 'subtitle2', color: 'textPrimary' }}\n                      secondary={notification.description}\n                    />\n                  </ListItem>\n                );\n              })}\n            </List>\n            <Box\n              p={1}\n              display=\"flex\"\n              justifyContent=\"center\"\n            >\n              <Button\n                component={RouterLink}\n                size=\"small\"\n                to=\"#\"\n              >\n                Mark all as read\n              </Button>\n            </Box>\n          </>\n        )}\n      </Popover>\n    </>\n  );\n};\n\nexport default Notifications;\n"]},"metadata":{},"sourceType":"module"}