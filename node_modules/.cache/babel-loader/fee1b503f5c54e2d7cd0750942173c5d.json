{"ast":null,"code":"import _extends from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/craigcronin/Development/applestooapples_web_template/src/views/invoice/InvoiceListView/Results.js\";\n\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Avatar, Box, Button, Card, Checkbox, InputAdornment, IconButton, Link, SvgIcon, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, TextField, Typography, colors, makeStyles } from '@material-ui/core';\nimport { Edit as EditIcon, ArrowRight as ArrowRightIcon, Search as SearchIcon } from 'react-feather';\nimport Label from 'src/components/Label';\nimport getInitials from 'src/utils/getInitials';\nvar statusOptions = [{\n  id: 'all',\n  name: 'All'\n}, {\n  id: 'paid',\n  name: 'Paid'\n}, {\n  id: 'pending',\n  name: 'Pending'\n}, {\n  id: 'canceled',\n  name: 'Canceled'\n}];\nvar sortOptions = [{\n  value: 'createdAt|desc',\n  label: 'Newest first'\n}, {\n  value: 'createdAt|asc',\n  label: 'Oldest first'\n}];\n\nvar getStatusLabel = function getStatusLabel(invoiceStatus) {\n  var map = {\n    canceled: {\n      text: 'Canceled',\n      color: 'error'\n    },\n    paid: {\n      text: 'Paid',\n      color: 'success'\n    },\n    pending: {\n      text: 'Pending',\n      color: 'warning'\n    }\n  };\n  var _map$invoiceStatus = map[invoiceStatus],\n      text = _map$invoiceStatus.text,\n      color = _map$invoiceStatus.color;\n  return /*#__PURE__*/React.createElement(Label, {\n    color: color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, text);\n};\n\nvar applyFilters = function applyFilters(invoices, query, filters) {\n  return invoices.filter(function (invoice) {\n    var matches = true;\n\n    if (query) {\n      var properties = ['name', 'email'];\n      var containsQuery = false;\n      properties.forEach(function (property) {\n        if (invoice.customer[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    if (filters.status && invoice.status !== filters.status) {\n      matches = false;\n    }\n\n    return matches;\n  });\n};\n\nvar applyPagination = function applyPagination(invoices, page, limit) {\n  return invoices.slice(page * limit, page * limit + limit);\n};\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    queryField: {\n      width: 500\n    },\n    statusField: {\n      flexBasis: 200\n    },\n    bulkOperations: {\n      position: 'relative'\n    },\n    bulkActions: {\n      paddingLeft: 4,\n      paddingRight: 4,\n      marginTop: 6,\n      position: 'absolute',\n      width: '100%',\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    },\n    bulkAction: {\n      marginLeft: theme.spacing(2)\n    },\n    avatar: {\n      backgroundColor: colors.red[500],\n      color: colors.common.white\n    }\n  };\n});\n\nvar Results = function Results(_ref) {\n  var className = _ref.className,\n      invoices = _ref.invoices,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"invoices\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedInvoices = _useState2[0],\n      setSelectedInvoices = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(10),\n      _useState6 = _slicedToArray(_useState5, 2),\n      limit = _useState6[0],\n      setLimit = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      query = _useState8[0],\n      setQuery = _useState8[1];\n\n  var _useState9 = useState(sortOptions[0].value),\n      _useState10 = _slicedToArray(_useState9, 2),\n      sort = _useState10[0],\n      setSort = _useState10[1];\n\n  var _useState11 = useState({\n    status: null\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      filters = _useState12[0],\n      setFilters = _useState12[1];\n\n  var handleQueryChange = function handleQueryChange(event) {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  var handleStatusChange = function handleStatusChange(event) {\n    event.persist();\n    var value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters(function (prevFilters) {\n      return _objectSpread(_objectSpread({}, prevFilters), {}, {\n        status: value\n      });\n    });\n  };\n\n  var handleSortChange = function handleSortChange(event) {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  var handleSelectAllInvoices = function handleSelectAllInvoices(event) {\n    setSelectedInvoices(event.target.checked ? invoices.map(function (invoice) {\n      return invoice.id;\n    }) : []);\n  };\n\n  var handleSelectOneInvoice = function handleSelectOneInvoice(event, invoiceId) {\n    if (!selectedInvoices.includes(invoiceId)) {\n      setSelectedInvoices(function (prevSelected) {\n        return [].concat(_toConsumableArray(prevSelected), [invoiceId]);\n      });\n    } else {\n      setSelectedInvoices(function (prevSelected) {\n        return prevSelected.filter(function (id) {\n          return id !== invoiceId;\n        });\n      });\n    }\n  };\n\n  var handlePageChange = function handlePageChange(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleLimitChange = function handleLimitChange(event) {\n    setLimit(parseInt(event.target.value));\n  }; // Usually query is done on backend with indexing solutions\n\n\n  var filteredInvoices = applyFilters(invoices, query, filters);\n  var paginatedInvoices = applyPagination(filteredInvoices, page, limit);\n  var enableBulkOperations = selectedInvoices.length > 0;\n  var selectedSomeInvoices = selectedInvoices.length > 0 && selectedInvoices.length < invoices.length;\n  var selectedAllInvoices = selectedInvoices.length === invoices.length;\n  return /*#__PURE__*/React.createElement(Card, _extends({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    p: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.queryField,\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SvgIcon, {\n        fontSize: \"small\",\n        color: \"action\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(SearchIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }\n      })))\n    },\n    onChange: handleQueryChange,\n    placeholder: \"Search invoices by customer\",\n    value: query,\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Sort By\",\n    name: \"sort\",\n    onChange: handleSortChange,\n    select: true,\n    SelectProps: {\n      native: true\n    },\n    value: sort,\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 11\n    }\n  }, sortOptions.map(function (option) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 15\n      }\n    }, option.label);\n  }))), /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.statusField,\n    label: \"Status\",\n    name: \"status\",\n    onChange: handleStatusChange,\n    select: true,\n    SelectProps: {\n      native: true\n    },\n    value: filters.status || 'all',\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  }, statusOptions.map(function (statusOption) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: statusOption.id,\n      value: statusOption.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 15\n      }\n    }, statusOption.name);\n  })))), enableBulkOperations && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bulkOperations,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bulkActions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: selectedAllInvoices,\n    indeterminate: selectedSomeInvoices,\n    onChange: handleSelectAllInvoices,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.bulkAction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.bulkAction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }\n  }, \"Edit\"))), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    minWidth: 1200,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: selectedAllInvoices,\n    indeterminate: selectedSomeInvoices,\n    onChange: handleSelectAllInvoices,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 17\n    }\n  }, \"Customer\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 17\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }, \"Amount\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 17\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 17\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 17\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 13\n    }\n  }, paginatedInvoices.map(function (invoice) {\n    var isInvoiceSelected = selectedInvoices.includes(invoice.id);\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      key: invoice.id,\n      selected: isInvoiceSelected,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isInvoiceSelected,\n      onChange: function onChange(event) {\n        return handleSelectOneInvoice(event, invoice.id);\n      },\n      value: isInvoiceSelected,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: classes.avatar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 25\n      }\n    }, getInitials(invoice.customer.name)), /*#__PURE__*/React.createElement(Box, {\n      ml: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      variant: \"subtitle2\",\n      color: \"textPrimary\",\n      component: RouterLink,\n      underline: \"none\",\n      to: \"#\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 27\n      }\n    }, invoice.customer.name), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 27\n      }\n    }, invoice.customer.email)))), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 21\n      }\n    }, getStatusLabel(invoice.status)), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 21\n      }\n    }, numeral(invoice.totalAmount).format(\"\".concat(invoice.currency, \"0,0.00\"))), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 21\n      }\n    }, invoice.id), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 21\n      }\n    }, moment(invoice.issueDate).format('DD/MM/YYYY')), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      component: RouterLink,\n      to: \"#\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(SvgIcon, {\n      fontSize: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(IconButton, {\n      component: RouterLink,\n      to: \"/app/management/invoices/1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(SvgIcon, {\n      fontSize: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ArrowRightIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 27\n      }\n    })))));\n  }))))), /*#__PURE__*/React.createElement(TablePagination, {\n    component: \"div\",\n    count: filteredInvoices.length,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleLimitChange,\n    page: page,\n    rowsPerPage: limit,\n    rowsPerPageOptions: [5, 10, 25],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }\n  }));\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  invoices: PropTypes.array.isRequired\n};\nResults.defaultProps = {\n  invoices: []\n};\nexport default Results;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/views/invoice/InvoiceListView/Results.js"],"names":["React","useState","Link","RouterLink","clsx","moment","numeral","PropTypes","PerfectScrollbar","Avatar","Box","Button","Card","Checkbox","InputAdornment","IconButton","SvgIcon","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TextField","Typography","colors","makeStyles","Edit","EditIcon","ArrowRight","ArrowRightIcon","Search","SearchIcon","Label","getInitials","statusOptions","id","name","sortOptions","value","label","getStatusLabel","invoiceStatus","map","canceled","text","color","paid","pending","applyFilters","invoices","query","filters","filter","invoice","matches","properties","containsQuery","forEach","property","customer","toLowerCase","includes","status","applyPagination","page","limit","slice","useStyles","theme","root","queryField","width","statusField","flexBasis","bulkOperations","position","bulkActions","paddingLeft","paddingRight","marginTop","zIndex","backgroundColor","palette","background","default","bulkAction","marginLeft","spacing","avatar","red","common","white","Results","className","rest","classes","selectedInvoices","setSelectedInvoices","setPage","setLimit","setQuery","sort","setSort","setFilters","handleQueryChange","event","persist","target","handleStatusChange","prevFilters","handleSortChange","handleSelectAllInvoices","checked","handleSelectOneInvoice","invoiceId","prevSelected","handlePageChange","newPage","handleLimitChange","parseInt","filteredInvoices","paginatedInvoices","enableBulkOperations","length","selectedSomeInvoices","selectedAllInvoices","startAdornment","native","option","statusOption","isInvoiceSelected","email","totalAmount","format","currency","issueDate","propTypes","string","array","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  InputAdornment,\n  IconButton,\n  Link,\n  SvgIcon,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  Typography,\n  colors,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Edit as EditIcon,\n  ArrowRight as ArrowRightIcon,\n  Search as SearchIcon\n} from 'react-feather';\nimport Label from 'src/components/Label';\nimport getInitials from 'src/utils/getInitials';\n\nconst statusOptions = [\n  {\n    id: 'all',\n    name: 'All'\n  },\n  {\n    id: 'paid',\n    name: 'Paid'\n  },\n  {\n    id: 'pending',\n    name: 'Pending'\n  },\n  {\n    id: 'canceled',\n    name: 'Canceled'\n  }\n];\n\nconst sortOptions = [\n  {\n    value: 'createdAt|desc',\n    label: 'Newest first'\n  },\n  {\n    value: 'createdAt|asc',\n    label: 'Oldest first'\n  }\n];\n\nconst getStatusLabel = (invoiceStatus) => {\n  const map = {\n    canceled: {\n      text: 'Canceled',\n      color: 'error'\n    },\n    paid: {\n      text: 'Paid',\n      color: 'success'\n    },\n    pending: {\n      text: 'Pending',\n      color: 'warning'\n    }\n  };\n\n  const { text, color } = map[invoiceStatus];\n\n  return (\n    <Label color={color}>\n      {text}\n    </Label>\n  );\n};\n\nconst applyFilters = (invoices, query, filters) => {\n  return invoices.filter((invoice) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['name', 'email'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (invoice.customer[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    if (filters.status && invoice.status !== filters.status) {\n      matches = false;\n    }\n\n    return matches;\n  });\n};\n\nconst applyPagination = (invoices, page, limit) => {\n  return invoices.slice(page * limit, page * limit + limit);\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  queryField: {\n    width: 500\n  },\n  statusField: {\n    flexBasis: 200\n  },\n  bulkOperations: {\n    position: 'relative'\n  },\n  bulkActions: {\n    paddingLeft: 4,\n    paddingRight: 4,\n    marginTop: 6,\n    position: 'absolute',\n    width: '100%',\n    zIndex: 2,\n    backgroundColor: theme.palette.background.default\n  },\n  bulkAction: {\n    marginLeft: theme.spacing(2)\n  },\n  avatar: {\n    backgroundColor: colors.red[500],\n    color: colors.common.white\n  }\n}));\n\nconst Results = ({ className, invoices, ...rest }) => {\n  const classes = useStyles();\n  const [selectedInvoices, setSelectedInvoices] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    status: null\n  });\n\n  const handleQueryChange = (event) => {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  const handleStatusChange = (event) => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      status: value\n    }));\n  };\n\n  const handleSortChange = (event) => {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllInvoices = (event) => {\n    setSelectedInvoices(event.target.checked\n      ? invoices.map((invoice) => invoice.id)\n      : []);\n  };\n\n  const handleSelectOneInvoice = (event, invoiceId) => {\n    if (!selectedInvoices.includes(invoiceId)) {\n      setSelectedInvoices((prevSelected) => [...prevSelected, invoiceId]);\n    } else {\n      setSelectedInvoices((prevSelected) => prevSelected.filter((id) => id !== invoiceId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  // Usually query is done on backend with indexing solutions\n  const filteredInvoices = applyFilters(invoices, query, filters);\n  const paginatedInvoices = applyPagination(filteredInvoices, page, limit);\n  const enableBulkOperations = selectedInvoices.length > 0;\n  const selectedSomeInvoices = selectedInvoices.length > 0 && selectedInvoices.length < invoices.length;\n  const selectedAllInvoices = selectedInvoices.length === invoices.length;\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={2}>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <TextField\n            className={classes.queryField}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SvgIcon\n                    fontSize=\"small\"\n                    color=\"action\"\n                  >\n                    <SearchIcon />\n                  </SvgIcon>\n                </InputAdornment>\n              )\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Search invoices by customer\"\n            value={query}\n            variant=\"outlined\"\n          />\n          <Box flexGrow={1} />\n          <TextField\n            label=\"Sort By\"\n            name=\"sort\"\n            onChange={handleSortChange}\n            select\n            SelectProps={{ native: true }}\n            value={sort}\n            variant=\"outlined\"\n          >\n            {sortOptions.map((option) => (\n              <option\n                key={option.value}\n                value={option.value}\n              >\n                {option.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n        <Box\n          mt={2}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <TextField\n            className={classes.statusField}\n            label=\"Status\"\n            name=\"status\"\n            onChange={handleStatusChange}\n            select\n            SelectProps={{ native: true }}\n            value={filters.status || 'all'}\n            variant=\"outlined\"\n          >\n            {statusOptions.map((statusOption) => (\n              <option\n                key={statusOption.id}\n                value={statusOption.id}\n              >\n                {statusOption.name}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n      </Box>\n      {enableBulkOperations && (\n        <div className={classes.bulkOperations}>\n          <div className={classes.bulkActions}>\n            <Checkbox\n              checked={selectedAllInvoices}\n              indeterminate={selectedSomeInvoices}\n              onChange={handleSelectAllInvoices}\n            />\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n            >\n              Delete\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n            >\n              Edit\n            </Button>\n          </div>\n        </div>\n      )}\n      <PerfectScrollbar>\n        <Box minWidth={1200}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllInvoices}\n                    indeterminate={selectedSomeInvoices}\n                    onChange={handleSelectAllInvoices}\n                  />\n                </TableCell>\n                <TableCell>\n                  Customer\n                </TableCell>\n                <TableCell>\n                  Status\n                </TableCell>\n                <TableCell>\n                  Amount\n                </TableCell>\n                <TableCell>\n                  ID\n                </TableCell>\n                <TableCell>\n                  Date\n                </TableCell>\n                <TableCell align=\"right\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedInvoices.map((invoice) => {\n                const isInvoiceSelected = selectedInvoices.includes(invoice.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={invoice.id}\n                    selected={isInvoiceSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isInvoiceSelected}\n                        onChange={(event) => handleSelectOneInvoice(event, invoice.id)}\n                        value={isInvoiceSelected}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Box\n                        display=\"flex\"\n                        alignItems=\"center\"\n                      >\n                        <Avatar className={classes.avatar}>\n                          {getInitials(invoice.customer.name)}\n                        </Avatar>\n                        <Box ml={2}>\n                          <Link\n                            variant=\"subtitle2\"\n                            color=\"textPrimary\"\n                            component={RouterLink}\n                            underline=\"none\"\n                            to=\"#\"\n                          >\n                            {invoice.customer.name}\n                          </Link>\n                          <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                          >\n                            {invoice.customer.email}\n                          </Typography>\n                        </Box>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      {getStatusLabel(invoice.status)}\n                    </TableCell>\n                    <TableCell>\n                      {numeral(invoice.totalAmount).format(`${invoice.currency}0,0.00`)}\n                    </TableCell>\n                    <TableCell>\n                      {invoice.id}\n                    </TableCell>\n                    <TableCell>\n                      {moment(invoice.issueDate).format('DD/MM/YYYY')}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton\n                        component={RouterLink}\n                        to=\"#\"\n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <EditIcon />\n                        </SvgIcon>\n                      </IconButton>\n                      <IconButton\n                        component={RouterLink}\n                        to=\"/app/management/invoices/1\"\n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <ArrowRightIcon />\n                        </SvgIcon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredInvoices.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  invoices: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  invoices: []\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}