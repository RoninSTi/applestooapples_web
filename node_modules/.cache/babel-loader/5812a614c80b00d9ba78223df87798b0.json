{"ast":null,"code":"import _extends from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/craigcronin/Development/applestooapples_web_template/src/components/PostCard/index.js\";\n\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { Lightbox } from 'react-modal-image';\nimport { Avatar, Box, Card, CardActionArea, CardHeader, CardMedia, Divider, Link, Typography, makeStyles } from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport Reactions from './Reactions';\nimport Comment from './Comment';\nimport CommentAdd from './CommentAdd';\nvar useStyles = makeStyles(function () {\n  return {\n    root: {},\n    date: {\n      marginLeft: 6\n    },\n    media: {\n      height: 500,\n      backgroundPosition: 'top'\n    }\n  };\n});\n\nvar PostCard = function PostCard(_ref) {\n  var className = _ref.className,\n      post = _ref.post,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"post\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedImage = _useState2[0],\n      setSelectedImage = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, _extends({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    avatar: /*#__PURE__*/React.createElement(Avatar, {\n      alt: \"Person\",\n      component: RouterLink,\n      src: post.author.avatar,\n      to: \"#\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }),\n    disableTypography: true,\n    subheader: /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(AccessTimeIcon, {\n      fontSize: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      color: \"textSecondary\",\n      className: classes.date,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }\n    }, moment(post.createdAt).fromNow())),\n    title: /*#__PURE__*/React.createElement(Link, {\n      color: \"textPrimary\",\n      component: RouterLink,\n      to: \"#\",\n      variant: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, post.author.name),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    px: 3,\n    pb: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body1\",\n    color: \"textPrimary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, post.message), post.media && /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardActionArea, {\n    onClick: function onClick() {\n      return setSelectedImage(post.media);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: classes.media,\n    image: post.media,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Reactions, {\n    post: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Box, {\n    my: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  })), post.comments.map(function (comment) {\n    return /*#__PURE__*/React.createElement(Comment, {\n      comment: comment,\n      key: comment.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    });\n  }), /*#__PURE__*/React.createElement(Box, {\n    my: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(CommentAdd, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }))), selectedImage && /*#__PURE__*/React.createElement(Lightbox, {\n    large: selectedImage,\n    onClose: function onClose() {\n      return setSelectedImage(null);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }));\n};\n\nPostCard.propTypes = {\n  className: PropTypes.string,\n  post: PropTypes.object.isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/components/PostCard/index.js"],"names":["React","useState","Link","RouterLink","PropTypes","clsx","moment","Lightbox","Avatar","Box","Card","CardActionArea","CardHeader","CardMedia","Divider","Typography","makeStyles","AccessTimeIcon","Reactions","Comment","CommentAdd","useStyles","root","date","marginLeft","media","height","backgroundPosition","PostCard","className","post","rest","classes","selectedImage","setSelectedImage","author","avatar","createdAt","fromNow","name","message","comments","map","comment","id","propTypes","string","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { Lightbox } from 'react-modal-image';\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardActionArea,\n  CardHeader,\n  CardMedia,\n  Divider,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport Reactions from './Reactions';\nimport Comment from './Comment';\nimport CommentAdd from './CommentAdd';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  date: {\n    marginLeft: 6\n  },\n  media: {\n    height: 500,\n    backgroundPosition: 'top'\n  }\n}));\n\nconst PostCard = ({ className, post, ...rest }) => {\n  const classes = useStyles();\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  return (\n    <>\n      <Card\n        className={clsx(classes.root, className)}\n        {...rest}\n      >\n        <CardHeader\n          avatar={(\n            <Avatar\n              alt=\"Person\"\n              component={RouterLink}\n              src={post.author.avatar}\n              to=\"#\"\n            />\n          )}\n          disableTypography\n          subheader={(\n            <Box\n              display=\"flex\"\n              alignItems=\"center\"\n            >\n              <AccessTimeIcon fontSize=\"small\" />\n              <Typography\n                variant=\"caption\"\n                color=\"textSecondary\"\n                className={classes.date}\n              >\n                {moment(post.createdAt).fromNow()}\n              </Typography>\n            </Box>\n          )}\n          title={(\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h6\"\n            >\n              {post.author.name}\n            </Link>\n          )}\n        />\n        <Box px={3} pb={2}>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            {post.message}\n          </Typography>\n          {post.media && (\n          <Box mt={2}>\n            <CardActionArea onClick={() => setSelectedImage(post.media)}>\n              <CardMedia\n                className={classes.media}\n                image={post.media}\n              />\n            </CardActionArea>\n          </Box>\n          )}\n          <Box\n            mt={2}\n          >\n            <Reactions post={post} />\n          </Box>\n          <Box my={2}>\n            <Divider />\n          </Box>\n          {post.comments.map((comment) => (\n            <Comment\n              comment={comment}\n              key={comment.id}\n            />\n          ))}\n          <Box my={2}>\n            <Divider />\n          </Box>\n          <CommentAdd />\n        </Box>\n      </Card>\n      {selectedImage && (\n        <Lightbox\n          large={selectedImage}\n          onClose={() => setSelectedImage(null)}\n        />\n      )}\n    </>\n  );\n};\n\nPostCard.propTypes = {\n  className: PropTypes.string,\n  post: PropTypes.object.isRequired\n};\n\nexport default PostCard;\n"]},"metadata":{},"sourceType":"module"}