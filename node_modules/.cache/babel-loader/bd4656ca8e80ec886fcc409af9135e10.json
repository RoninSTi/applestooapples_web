{"ast":null,"code":"import _extends from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/craigcronin/Development/applestooapples_web_template/src/views/kanban/KanbanView/CardEditModal/CommentAdd.js\";\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport { Avatar, TextField, makeStyles } from '@material-ui/core';\nimport { useDispatch } from 'src/store';\nimport useAuth from 'src/hooks/useAuth';\nimport { addComment } from 'src/slices/kanban';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    field: {\n      marginLeft: theme.spacing(2)\n    }\n  };\n});\n\nvar CommentAdd = function CommentAdd(_ref) {\n  var cardId = _ref.cardId,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"cardId\", \"className\"]);\n\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    setMessage(event.target.value);\n  };\n\n  var handleKeyUp = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              event.persist();\n\n              if (!(event.keyCode === 13 && message)) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 5;\n              return dispatch(addComment(cardId, message));\n\n            case 5:\n              setMessage('');\n              enqueueSnackbar('Comment added', {\n                variant: 'success'\n              });\n\n            case 7:\n              _context.next = 13;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n              enqueueSnackbar('Something went wrong', {\n                variant: 'error'\n              });\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function handleKeyUp(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"Person\",\n    src: user.avatar,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    className: classes.field,\n    value: message,\n    onChange: handleChange,\n    onKeyUp: handleKeyUp,\n    placeholder: \"Write a comment...\",\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n};\n\nCommentAdd.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  className: PropTypes.string\n};\nexport default CommentAdd;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/views/kanban/KanbanView/CardEditModal/CommentAdd.js"],"names":["React","useState","PropTypes","clsx","useSnackbar","Avatar","TextField","makeStyles","useDispatch","useAuth","addComment","useStyles","theme","root","display","alignItems","field","marginLeft","spacing","CommentAdd","cardId","className","rest","classes","dispatch","user","enqueueSnackbar","message","setMessage","handleChange","event","persist","target","value","handleKeyUp","keyCode","variant","console","error","avatar","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useSnackbar } from 'notistack';\nimport {\n  Avatar,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport { useDispatch } from 'src/store';\nimport useAuth from 'src/hooks/useAuth';\nimport { addComment } from 'src/slices/kanban';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  field: {\n    marginLeft: theme.spacing(2)\n  }\n}));\n\nconst CommentAdd = ({ cardId, className, ...rest }) => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n  const { enqueueSnackbar } = useSnackbar();\n  const [message, setMessage] = useState('');\n\n  const handleChange = (event) => {\n    event.persist();\n    setMessage(event.target.value);\n  };\n\n  const handleKeyUp = async (event) => {\n    try {\n      event.persist();\n\n      if (event.keyCode === 13 && message) {\n        await dispatch(addComment(cardId, message));\n        setMessage('');\n        enqueueSnackbar('Comment added', {\n          variant: 'success'\n        });\n      }\n    } catch (err) {\n      console.error(err);\n      enqueueSnackbar('Something went wrong', {\n        variant: 'error'\n      });\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar\n        alt=\"Person\"\n        src={user.avatar}\n      />\n      <TextField\n        fullWidth\n        className={classes.field}\n        value={message}\n        onChange={handleChange}\n        onKeyUp={handleKeyUp}\n        placeholder=\"Write a comment...\"\n        variant=\"outlined\"\n      />\n    </div>\n  );\n}\n\nCommentAdd.propTypes = {\n  cardId: PropTypes.string.isRequired,\n  className: PropTypes.string\n};\n\nexport default CommentAdd;\n"]},"metadata":{},"sourceType":"module"}