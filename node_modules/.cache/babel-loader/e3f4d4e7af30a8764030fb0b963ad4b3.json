{"ast":null,"code":"import moment from 'moment';\nimport mock from 'src/utils/mock';\nmock.onGet('/api/invoices').reply(function () {\n  var invoices = [{\n    id: '5ecb868d0f437390ef3ac62c',\n    currency: '$',\n    customer: {\n      email: 'contact@anahenisky.io',\n      name: 'Ana Henisky'\n    },\n    issueDate: moment().subtract(1, 'hours').toDate().getTime(),\n    status: 'paid',\n    totalAmount: 55.50\n  }, {\n    id: '5ecb868ada8deedee0638502',\n    currency: '$',\n    customer: {\n      email: 'sales@matt-jason.com',\n      name: 'Matt Jason'\n    },\n    issueDate: moment().subtract(2, 'days').subtract(5, 'hours').toDate().getTime(),\n    status: 'pending',\n    totalAmount: 253.76\n  }, {\n    id: '5ecb868700aba84d0f1c0e48',\n    currency: '$',\n    customer: {\n      email: 'support@terrythomas.io',\n      name: 'Terry Thomas'\n    },\n    issueDate: moment().subtract(6, 'days').subtract(4, 'hours').toDate().getTime(),\n    status: 'canceled',\n    totalAmount: 781.50\n  }, {\n    id: '5ecb8682038e1ddf4e868764',\n    currency: '$',\n    customer: {\n      email: 'contact@triv-shopper.co.uk',\n      name: 'Triv Shopper'\n    },\n    issueDate: moment().subtract(15, 'days').subtract(2, 'hours').toDate().getTime(),\n    status: 'paid',\n    totalAmount: 96.64\n  }];\n  return [200, {\n    invoices: invoices\n  }];\n});\nmock.onGet('/api/invoices/1').reply(function () {\n  var invoice = {\n    id: '5ecb86785312dcc69b5799ad',\n    currency: '$',\n    customer: {\n      address: '271 Richmond Rd, Grey Lynn, Auckland 1022, New Zealand',\n      company: 'Countdown Grey Lynn',\n      email: 'contact@anahenisky.io',\n      name: 'Ana Henisky',\n      taxId: '6934656584231'\n    },\n    dueDate: moment().toDate().getTime(),\n    issueDate: moment().subtract(1, 'hours').toDate().getTime(),\n    items: [{\n      id: '5ecb8694db1760a701dfbf74',\n      currency: '$',\n      description: 'Freelancer Subscription (12/05/2019 - 11/06/2019)',\n      unitAmount: 55.50\n    }],\n    number: 'DEV-9483',\n    status: 'paid',\n    subtotalAmount: 50.00,\n    taxAmount: 5.50,\n    totalAmount: 55.50\n  };\n  return [200, {\n    invoice: invoice\n  }];\n});","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/__mocks__/invoices.js"],"names":["moment","mock","onGet","reply","invoices","id","currency","customer","email","name","issueDate","subtract","toDate","getTime","status","totalAmount","invoice","address","company","taxId","dueDate","items","description","unitAmount","number","subtotalAmount","taxAmount"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport mock from 'src/utils/mock';\n\nmock.onGet('/api/invoices').reply(() => {\n  const invoices = [\n    {\n      id: '5ecb868d0f437390ef3ac62c',\n      currency: '$',\n      customer: {\n        email: 'contact@anahenisky.io',\n        name: 'Ana Henisky'\n      },\n      issueDate: moment()\n        .subtract(1, 'hours')\n        .toDate()\n        .getTime(),\n      status: 'paid',\n      totalAmount: 55.50\n    },\n    {\n      id: '5ecb868ada8deedee0638502',\n      currency: '$',\n      customer: {\n        email: 'sales@matt-jason.com',\n        name: 'Matt Jason'\n      },\n      issueDate: moment()\n        .subtract(2, 'days')\n        .subtract(5, 'hours')\n        .toDate()\n        .getTime(),\n      status: 'pending',\n      totalAmount: 253.76\n    },\n    {\n      id: '5ecb868700aba84d0f1c0e48',\n      currency: '$',\n      customer: {\n        email: 'support@terrythomas.io',\n        name: 'Terry Thomas'\n      },\n      issueDate: moment()\n        .subtract(6, 'days')\n        .subtract(4, 'hours')\n        .toDate()\n        .getTime(),\n      status: 'canceled',\n      totalAmount: 781.50\n    },\n    {\n      id: '5ecb8682038e1ddf4e868764',\n      currency: '$',\n      customer: {\n        email: 'contact@triv-shopper.co.uk',\n        name: 'Triv Shopper'\n      },\n      issueDate: moment()\n        .subtract(15, 'days')\n        .subtract(2, 'hours')\n        .toDate()\n        .getTime(),\n      status: 'paid',\n      totalAmount: 96.64\n    }\n  ];\n\n  return [200, { invoices }];\n});\n\nmock.onGet('/api/invoices/1').reply(() => {\n  const invoice = {\n    id: '5ecb86785312dcc69b5799ad',\n    currency: '$',\n    customer: {\n      address: '271 Richmond Rd, Grey Lynn, Auckland 1022, New Zealand',\n      company: 'Countdown Grey Lynn',\n      email: 'contact@anahenisky.io',\n      name: 'Ana Henisky',\n      taxId: '6934656584231'\n    },\n    dueDate: moment()\n      .toDate()\n      .getTime(),\n    issueDate: moment()\n      .subtract(1, 'hours')\n      .toDate()\n      .getTime(),\n    items: [\n      {\n        id: '5ecb8694db1760a701dfbf74',\n        currency: '$',\n        description: 'Freelancer Subscription (12/05/2019 - 11/06/2019)',\n        unitAmount: 55.50\n      }\n    ],\n    number: 'DEV-9483',\n    status: 'paid',\n    subtotalAmount: 50.00,\n    taxAmount: 5.50,\n    totalAmount: 55.50\n  }\n\n  return [200, { invoice }];\n});\n"]},"metadata":{},"sourceType":"module"}