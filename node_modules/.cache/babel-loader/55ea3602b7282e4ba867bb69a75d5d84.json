{"ast":null,"code":"import _regeneratorRuntime from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createSlice } from '@reduxjs/toolkit';\nimport axios from 'src/utils/axios';\nvar initialState = {\n  notifications: []\n};\nvar slice = createSlice({\n  name: 'notifications',\n  initialState: initialState,\n  reducers: {\n    getNotifications: function getNotifications(state, action) {\n      var notifications = action.payload.notifications;\n      state.notifications = notifications;\n    }\n  }\n});\nexport var reducer = slice.reducer;\nexport var getNotifications = function getNotifications() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get('/api/notifications');\n\n            case 2:\n              response = _context.sent;\n              dispatch(slice.actions.getNotifications(response.data));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport default slice;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/slices/notification.js"],"names":["createSlice","axios","initialState","notifications","slice","name","reducers","getNotifications","state","action","payload","reducer","dispatch","get","response","actions","data"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,aAAa,EAAE;AADI,CAArB;AAIA,IAAMC,KAAK,GAAGJ,WAAW,CAAC;AACxBK,EAAAA,IAAI,EAAE,eADkB;AAExBH,EAAAA,YAAY,EAAZA,YAFwB;AAGxBI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,gBADQ,4BACSC,KADT,EACgBC,MADhB,EACwB;AAAA,UACtBN,aADsB,GACJM,MAAM,CAACC,OADH,CACtBP,aADsB;AAG9BK,MAAAA,KAAK,CAACL,aAAN,GAAsBA,aAAtB;AACD;AALO;AAHc,CAAD,CAAzB;AAYA,OAAO,IAAMQ,OAAO,GAAGP,KAAK,CAACO,OAAtB;AAEP,OAAO,IAAMJ,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;AAAA,wEAAM,iBAAOK,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACbX,KAAK,CAACY,GAAN,CAAU,oBAAV,CADa;;AAAA;AAC9BC,cAAAA,QAD8B;AAGpCF,cAAAA,QAAQ,CAACR,KAAK,CAACW,OAAN,CAAcR,gBAAd,CAA+BO,QAAQ,CAACE,IAAxC,CAAD,CAAR;;AAHoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AAMP,eAAeZ,KAAf","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'src/utils/axios';\n\nconst initialState = {\n  notifications: []\n};\n\nconst slice = createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {\n    getNotifications(state, action) {\n      const { notifications } = action.payload;\n\n      state.notifications = notifications;\n    }\n  }\n});\n\nexport const reducer = slice.reducer;\n\nexport const getNotifications = () => async (dispatch) => {\n  const response = await axios.get('/api/notifications');\n\n  dispatch(slice.actions.getNotifications(response.data));\n};\n\nexport default slice;\n"]},"metadata":{},"sourceType":"module"}