{"ast":null,"code":"import _extends from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/craigcronin/Development/applestooapples_web_template/src/layouts/DocsLayout/NavBar/NavItem.js\";\n\nimport React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Button, ListItem, makeStyles } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    item: {\n      display: 'block',\n      paddingTop: 0,\n      paddingBottom: 0\n    },\n    itemLeaf: {\n      display: 'flex',\n      paddingTop: 0,\n      paddingBottom: 0\n    },\n    button: {\n      padding: '10px 8px',\n      justifyContent: 'flex-start',\n      textTransform: 'none',\n      letterSpacing: 0,\n      width: '100%'\n    },\n    buttonLeaf: {\n      padding: '10px 8px',\n      justifyContent: 'flex-start',\n      textTransform: 'none',\n      letterSpacing: 0,\n      width: '100%',\n      fontWeight: theme.typography.fontWeightRegular,\n      '&.depth-0': {\n        fontWeight: theme.typography.fontWeightMedium\n      }\n    },\n    active: {\n      color: theme.palette.secondary.main,\n      fontWeight: theme.typography.fontWeightMedium\n    }\n  };\n});\n\nvar NavItem = function NavItem(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      depth = _ref.depth,\n      href = _ref.href,\n      title = _ref.title,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"depth\", \"href\", \"title\"]);\n\n  var classes = useStyles();\n  var paddingLeft = 8;\n\n  if (depth > 0) {\n    paddingLeft = 32 + 8 * depth;\n  }\n\n  var style = {\n    paddingLeft: paddingLeft\n  };\n\n  if (children) {\n    return /*#__PURE__*/React.createElement(ListItem, _extends({\n      className: clsx(classes.item, className),\n      disableGutters: true\n    }, rest, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: classes.button,\n      style: style,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, title), children);\n  }\n\n  return /*#__PURE__*/React.createElement(ListItem, _extends({\n    className: clsx(classes.itemLeaf, className),\n    disableGutters: true\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    activeClassName: classes.active,\n    className: clsx(classes.buttonLeaf, \"depth-\".concat(depth)),\n    component: RouterLink,\n    exact: true,\n    style: style,\n    to: href,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, title));\n};\n\nNavItem.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  depth: PropTypes.number.isRequired,\n  href: PropTypes.string,\n  title: PropTypes.string.isRequired\n};\nexport default NavItem;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/layouts/DocsLayout/NavBar/NavItem.js"],"names":["React","NavLink","RouterLink","clsx","PropTypes","Button","ListItem","makeStyles","useStyles","theme","item","display","paddingTop","paddingBottom","itemLeaf","button","padding","justifyContent","textTransform","letterSpacing","width","buttonLeaf","fontWeight","typography","fontWeightRegular","fontWeightMedium","active","color","palette","secondary","main","NavItem","children","className","depth","href","title","rest","classes","paddingLeft","style","propTypes","node","string","number","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'block',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  itemLeaf: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  button: {\n    padding: '10px 8px',\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    letterSpacing: 0,\n    width: '100%'\n  },\n  buttonLeaf: {\n    padding: '10px 8px',\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    letterSpacing: 0,\n    width: '100%',\n    fontWeight: theme.typography.fontWeightRegular,\n    '&.depth-0': {\n      fontWeight: theme.typography.fontWeightMedium\n    }\n  },\n  active: {\n    color: theme.palette.secondary.main,\n    fontWeight: theme.typography.fontWeightMedium,\n  }\n}));\n\nconst NavItem = ({\n  children,\n  className,\n  depth,\n  href,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n  let paddingLeft = 8;\n\n  if (depth > 0) {\n    paddingLeft = 32 + 8 * depth;\n  }\n\n  const style = { paddingLeft };\n\n  if (children) {\n    return (\n      <ListItem\n        className={clsx(classes.item, className)}\n        disableGutters\n        {...rest}\n      >\n        <Button\n          className={classes.button}\n          style={style}\n        >\n          {title}\n        </Button>\n        {children}\n      </ListItem>\n    );\n  }\n\n  return (\n    <ListItem\n      className={clsx(classes.itemLeaf, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={clsx(classes.buttonLeaf, `depth-${depth}`)}\n        component={RouterLink}\n        exact\n        style={style}\n        to={href}\n      >\n        {title}\n      </Button>\n    </ListItem>\n  );\n};\n\nNavItem.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  depth: PropTypes.number.isRequired,\n  href: PropTypes.string,\n  title: PropTypes.string.isRequired\n};\n\nexport default NavItem;\n"]},"metadata":{},"sourceType":"module"}