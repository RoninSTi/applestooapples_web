{"ast":null,"code":"import _extends from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/craigcronin/Development/applestooapples_web_template/src/views/account/AccountView/Users/Invite.js\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport { useDispatch, useSelector } from 'src/store';\nimport { inviteUser } from 'src/slices/account';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, FormHelperText, Grid, MenuItem, TextField, makeStyles } from '@material-ui/core';\nvar useStyles = makeStyles(function () {\n  return {\n    root: {}\n  };\n});\n\nvar Invite = function Invite(_ref) {\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n\n  var _useSnackbar = useSnackbar(),\n      enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  var dispatch = useDispatch();\n  var account = useSelector(function (state) {\n    return state.account.activeAccount;\n  });\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      role: 'super-admin',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      role: Yup.string().required('Required')\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var resetForm, setErrors, setStatus, setSubmitting;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                resetForm = _ref2.resetForm, setErrors = _ref2.setErrors, setStatus = _ref2.setStatus, setSubmitting = _ref2.setSubmitting;\n                _context.prev = 1;\n                _context.next = 4;\n                return dispatch(inviteUser(values, account === null || account === void 0 ? void 0 : account.id));\n\n              case 4:\n                resetForm();\n                setStatus({\n                  success: true\n                });\n                setSubmitting(false);\n                enqueueSnackbar('User invited', {\n                  variant: 'success'\n                });\n                _context.next = 16;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n                console.error(_context.t0);\n                setStatus({\n                  success: false\n                });\n                setErrors({\n                  submit: _context.t0.message\n                });\n                setSubmitting(false);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 10]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, function (_ref4) {\n    var errors = _ref4.errors,\n        handleBlur = _ref4.handleBlur,\n        handleChange = _ref4.handleChange,\n        handleSubmit = _ref4.handleSubmit,\n        isSubmitting = _ref4.isSubmitting,\n        touched = _ref4.touched,\n        values = _ref4.values;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Card, _extends({\n      className: clsx(classes.root, className)\n    }, rest, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(CardHeader, {\n      title: \"Invite User\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Divider, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      alignItems: \"center\",\n      container: true,\n      justify: \"center\",\n      spacing: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 4,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.email && errors.email),\n      fullWidth: true,\n      helperText: touched.password && errors.password,\n      label: \"Email\",\n      name: \"email\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      type: \"email\",\n      value: values.email,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 4,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"select\",\n      label: \"Role\",\n      name: \"role\",\n      fullWidth: true,\n      onChange: handleChange,\n      select: true,\n      value: values.role,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"super-admin\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 23\n      }\n    }, \"Super Admin\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"admin\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 23\n      }\n    }, \"Admin\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      sm: 4,\n      xs: 12,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      disabled: isSubmitting,\n      type: \"submit\",\n      variant: \"contained\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, \"Invite User\"))), errors.submit && /*#__PURE__*/React.createElement(Box, {\n      mt: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormHelperText, {\n      error: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 21\n      }\n    }, errors.submit)))));\n  });\n};\n\nInvite.propTypes = {\n  className: PropTypes.string\n};\nexport default Invite;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/views/account/AccountView/Users/Invite.js"],"names":["React","PropTypes","clsx","Yup","Formik","useSnackbar","useDispatch","useSelector","inviteUser","Box","Button","Card","CardContent","CardHeader","Divider","FormHelperText","Grid","MenuItem","TextField","makeStyles","useStyles","root","Invite","className","rest","classes","enqueueSnackbar","dispatch","account","state","activeAccount","email","role","submit","object","shape","string","max","required","values","resetForm","setErrors","setStatus","setSubmitting","id","success","variant","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","password","propTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport { useDispatch, useSelector } from 'src/store'\nimport { inviteUser } from 'src/slices/account';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  FormHelperText,\n  Grid,\n  MenuItem,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Invite = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const dispatch = useDispatch()\n\n  const account = useSelector(state => state.account.activeAccount)\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        role: 'super-admin',\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Must be a valid email')\n          .max(255).required('Email is required'),\n        role: Yup.string()\n          .required('Required')\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          await dispatch(inviteUser(values, account?.id));\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('User invited', {\n            variant: 'success'\n          });\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n          <form onSubmit={handleSubmit}>\n            <Card\n              className={clsx(classes.root, className)}\n              {...rest}\n            >\n              <CardHeader title=\"Invite User\" />\n              <Divider />\n              <CardContent>\n                <Grid\n                  alignItems='center'\n                  container\n                  justify='center'\n                  spacing={3}\n                >\n                  <Grid\n                    item\n                    sm={4}\n                    xs={12}\n                  >\n                    <TextField\n                      error={Boolean(touched.email && errors.email)}\n                      fullWidth\n                      helperText={touched.password && errors.password}\n                      label=\"Email\"\n                      name=\"email\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      type=\"email\"\n                      value={values.email}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    sm={4}\n                    xs={12}\n                  >\n                    <TextField\n                      id=\"select\"\n                      label=\"Role\"\n                      name=\"role\"\n                      fullWidth\n                      onChange={handleChange}\n                      select\n                      value={values.role}\n                      variant=\"outlined\" >\n                      <MenuItem value=\"super-admin\">Super Admin</MenuItem>\n                      <MenuItem value=\"admin\">Admin</MenuItem>\n                    </TextField>\n                  </Grid>\n                  <Grid item sm={4} xs={12}>\n                    <Button\n                      color=\"secondary\"\n                      disabled={isSubmitting}\n                      type=\"submit\"\n                      variant=\"contained\"\n                    >\n                      Invite User\n                    </Button>\n                  </Grid>\n                </Grid>\n                {errors.submit && (\n                  <Box mt={3}>\n                    <FormHelperText error>\n                      {errors.submit}\n                    </FormHelperText>\n                  </Box>\n                )}\n              </CardContent>\n            </Card>\n          </form>\n        )}\n    </Formik>\n  );\n};\n\nInvite.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Invite;\n"]},"metadata":{},"sourceType":"module"}