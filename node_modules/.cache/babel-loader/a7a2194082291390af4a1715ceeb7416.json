{"ast":null,"code":"import _extends from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/craigcronin/Development/applestooapples_web_template/src/views/order/OrderListView/Results.js\";\n\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Card, CardHeader, Checkbox, Divider, IconButton, SvgIcon, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Typography, makeStyles } from '@material-ui/core';\nimport { Edit as EditIcon, ArrowRight as ArrowRightIcon } from 'react-feather';\nimport Label from 'src/components/Label';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport BulkOperations from './BulkOperations';\n\nvar getStatusLabel = function getStatusLabel(paymentStatus) {\n  var map = {\n    canceled: {\n      text: 'Canceled',\n      color: 'error'\n    },\n    completed: {\n      text: 'Completed',\n      color: 'success'\n    },\n    pending: {\n      text: 'Pending',\n      color: 'warning'\n    },\n    rejected: {\n      text: 'Rejected',\n      color: 'error'\n    }\n  };\n  var _map$paymentStatus = map[paymentStatus],\n      text = _map$paymentStatus.text,\n      color = _map$paymentStatus.color;\n  return /*#__PURE__*/React.createElement(Label, {\n    color: color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, text);\n};\n\nvar applyPagination = function applyPagination(orders, page, limit) {\n  return orders.slice(page * limit, page * limit + limit);\n};\n\nvar useStyles = makeStyles(function () {\n  return {\n    root: {}\n  };\n});\n\nvar Results = function Results(_ref) {\n  var className = _ref.className,\n      orders = _ref.orders,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"orders\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedOrders = _useState2[0],\n      setSelectedOrders = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(10),\n      _useState6 = _slicedToArray(_useState5, 2),\n      limit = _useState6[0],\n      setLimit = _useState6[1];\n\n  var handleSelectAllOrders = function handleSelectAllOrders(event) {\n    setSelectedOrders(event.target.checked ? orders.map(function (order) {\n      return order.id;\n    }) : []);\n  };\n\n  var handleSelectOneOrder = function handleSelectOneOrder(event, orderId) {\n    if (!selectedOrders.includes(orderId)) {\n      setSelectedOrders(function (prevSelected) {\n        return [].concat(_toConsumableArray(prevSelected), [orderId]);\n      });\n    } else {\n      setSelectedOrders(function (prevSelected) {\n        return prevSelected.filter(function (id) {\n          return id !== orderId;\n        });\n      });\n    }\n  };\n\n  var handlePageChange = function handlePageChange(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleLimitChange = function handleLimitChange(event) {\n    setLimit(parseInt(event.target.value));\n  };\n\n  var paginatedOrders = applyPagination(orders, page, limit);\n  var enableBulkOperations = selectedOrders.length > 0;\n  var selectedSomeOrders = selectedOrders.length > 0 && selectedOrders.length < orders.length;\n  var selectedAllOrders = selectedOrders.length === orders.length;\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, orders.length, ' ', \"Records found. Page\", ' ', page + 1, ' ', \"of\", ' ', Math.ceil(orders.length / limit)), /*#__PURE__*/React.createElement(Card, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(GenericMoreButton, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }),\n    title: \"Orders\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    minWidth: 1150,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: selectedAllOrders,\n    indeterminate: selectedSomeOrders,\n    onChange: handleSelectAllOrders,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 19\n    }\n  }, \"Number\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, \"Customer\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, \"Method\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 19\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 19\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, paginatedOrders.map(function (order) {\n    var isOrderSelected = selectedOrders.includes(order.id);\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: order.id,\n      selected: selectedOrders.indexOf(order.id) !== -1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isOrderSelected,\n      onChange: function onChange(event) {\n        return handleSelectOneOrder(event, order.id);\n      },\n      value: isOrderSelected,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 23\n      }\n    }, order.number, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }, moment(order.createdAt).format('DD MMM YYYY | hh:mm'))), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 23\n      }\n    }, order.customer.name), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 23\n      }\n    }, order.paymentMethod), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 23\n      }\n    }, numeral(order.totalAmount).format(\"\".concat(order.currency, \"0,0.00\"))), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 23\n      }\n    }, getStatusLabel(order.status)), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SvgIcon, {\n      fontSize: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(IconButton, {\n      component: RouterLink,\n      to: \"/app/management/orders/1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SvgIcon, {\n      fontSize: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(ArrowRightIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 29\n      }\n    })))));\n  }))))), /*#__PURE__*/React.createElement(TablePagination, {\n    component: \"div\",\n    count: orders.length,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleLimitChange,\n    page: page,\n    rowsPerPage: limit,\n    rowsPerPageOptions: [5, 10, 25],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(BulkOperations, {\n    open: enableBulkOperations,\n    selected: selectedOrders,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }));\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\nResults.defaultProps = {\n  orders: []\n};\nexport default Results;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/views/order/OrderListView/Results.js"],"names":["React","useState","Link","RouterLink","clsx","moment","numeral","PropTypes","PerfectScrollbar","Box","Card","CardHeader","Checkbox","Divider","IconButton","SvgIcon","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Typography","makeStyles","Edit","EditIcon","ArrowRight","ArrowRightIcon","Label","GenericMoreButton","BulkOperations","getStatusLabel","paymentStatus","map","canceled","text","color","completed","pending","rejected","applyPagination","orders","page","limit","slice","useStyles","root","Results","className","rest","classes","selectedOrders","setSelectedOrders","setPage","setLimit","handleSelectAllOrders","event","target","checked","order","id","handleSelectOneOrder","orderId","includes","prevSelected","filter","handlePageChange","newPage","handleLimitChange","parseInt","value","paginatedOrders","enableBulkOperations","length","selectedSomeOrders","selectedAllOrders","Math","ceil","isOrderSelected","indexOf","number","createdAt","format","customer","name","paymentMethod","totalAmount","currency","status","propTypes","string","array","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  CardHeader,\n  Checkbox,\n  Divider,\n  IconButton,\n  SvgIcon,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Edit as EditIcon,\n  ArrowRight as ArrowRightIcon\n} from 'react-feather';\nimport Label from 'src/components/Label';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport BulkOperations from './BulkOperations';\n\nconst getStatusLabel = (paymentStatus) => {\n  const map = {\n    canceled: {\n      text: 'Canceled',\n      color: 'error'\n    },\n    completed: {\n      text: 'Completed',\n      color: 'success'\n    },\n    pending: {\n      text: 'Pending',\n      color: 'warning'\n    },\n    rejected: {\n      text: 'Rejected',\n      color: 'error'\n    }\n  };\n\n  const { text, color } = map[paymentStatus];\n\n  return (\n    <Label color={color}>\n      {text}\n    </Label>\n  );\n};\n\nconst applyPagination = (orders, page, limit) => {\n  return orders.slice(page * limit, page * limit + limit);\n};\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Results = ({ className, orders, ...rest }) => {\n  const classes = useStyles();\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n\n  const handleSelectAllOrders = (event) => {\n    setSelectedOrders(event.target.checked\n      ? orders.map((order) => order.id)\n      : []);\n  };\n\n  const handleSelectOneOrder = (event, orderId) => {\n    if (!selectedOrders.includes(orderId)) {\n      setSelectedOrders((prevSelected) => [...prevSelected, orderId]);\n    } else {\n      setSelectedOrders((prevSelected) => prevSelected.filter((id) => id !== orderId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  const paginatedOrders = applyPagination(orders, page, limit);\n  const enableBulkOperations = selectedOrders.length > 0;\n  const selectedSomeOrders = selectedOrders.length > 0 && selectedOrders.length < orders.length;\n  const selectedAllOrders = selectedOrders.length === orders.length;\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length}\n        {' '}\n        Records found. Page\n        {' '}\n        {page + 1}\n        {' '}\n        of\n        {' '}\n        {Math.ceil(orders.length / limit)}\n      </Typography>\n      <Card>\n        <CardHeader\n          action={<GenericMoreButton />}\n          title=\"Orders\"\n        />\n        <Divider />\n        <PerfectScrollbar>\n          <Box minWidth={1150}>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedAllOrders}\n                      indeterminate={selectedSomeOrders}\n                      onChange={handleSelectAllOrders}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    Number\n                  </TableCell>\n                  <TableCell>\n                    Customer\n                  </TableCell>\n                  <TableCell>\n                    Method\n                  </TableCell>\n                  <TableCell>\n                    Total\n                  </TableCell>\n                  <TableCell>\n                    Status\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    Actions\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {paginatedOrders.map((order) => {\n                  const isOrderSelected = selectedOrders.includes(order.id);\n\n                  return (\n                    <TableRow\n                      key={order.id}\n                      selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isOrderSelected}\n                          onChange={(event) => handleSelectOneOrder(event, order.id)}\n                          value={isOrderSelected}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {order.number}\n                        <Typography\n                          variant=\"body2\"\n                          color=\"textSecondary\"\n                        >\n                          {moment(order.createdAt).format('DD MMM YYYY | hh:mm')}\n                        </Typography>\n                      </TableCell>\n                      <TableCell>\n                        {order.customer.name}\n                      </TableCell>\n                      <TableCell>\n                        {order.paymentMethod}\n                      </TableCell>\n                      <TableCell>\n                        {numeral(order.totalAmount).format(`${order.currency}0,0.00`)}\n                      </TableCell>\n                      <TableCell>\n                        {getStatusLabel(order.status)}\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <IconButton>\n                          <SvgIcon fontSize=\"small\">\n                            <EditIcon />\n                          </SvgIcon>\n                        </IconButton>\n                        <IconButton\n                          component={RouterLink}\n                          to=\"/app/management/orders/1\"\n                        >\n                          <SvgIcon fontSize=\"small\">\n                            <ArrowRightIcon />\n                          </SvgIcon>\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              </TableBody>\n            </Table>\n          </Box>\n        </PerfectScrollbar>\n        <TablePagination\n          component=\"div\"\n          count={orders.length}\n          onChangePage={handlePageChange}\n          onChangeRowsPerPage={handleLimitChange}\n          page={page}\n          rowsPerPage={limit}\n          rowsPerPageOptions={[5, 10, 25]}\n        />\n      </Card>\n      <BulkOperations\n        open={enableBulkOperations}\n        selected={selectedOrders}\n      />\n    </div>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}