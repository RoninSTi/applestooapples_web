{"ast":null,"code":"import _extends from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/craigcronin/Development/applestooapples_web_template/src/views/auth/LoginView/FirebaseAuthLogin.js\";\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { Box, Button, Divider, FormHelperText, TextField, Typography, makeStyles } from '@material-ui/core';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    googleButton: {\n      backgroundColor: theme.palette.common.white\n    },\n    providerIcon: {\n      marginRight: theme.spacing(2)\n    },\n    divider: {\n      flexGrow: 1\n    },\n    dividerText: {\n      margin: theme.spacing(2)\n    }\n  };\n});\n\nvar FirebaseAuthLogin = function FirebaseAuthLogin(_ref) {\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n\n  var _useAuth = useAuth(),\n      signInWithEmailAndPassword = _useAuth.signInWithEmailAndPassword,\n      signInWithGoogle = _useAuth.signInWithGoogle;\n\n  var isMountedRef = useIsMountedRef();\n\n  var handleGoogleClick = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return signInWithGoogle();\n\n            case 3:\n              _context.next = 8;\n              break;\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    return function handleGoogleClick() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    className: classes.googleButton,\n    fullWidth: true,\n    onClick: handleGoogleClick,\n    size: \"large\",\n    variant: \"contained\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"Google\",\n    className: classes.providerIcon,\n    src: \"/static/images/google.svg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), \"Sign in with Google\"), /*#__PURE__*/React.createElement(Box, {\n    alignItems: \"center\",\n    display: \"flex\",\n    mt: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Divider, {\n    className: classes.divider,\n    orientation: \"horizontal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body1\",\n    className: classes.dividerText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"OR\"), /*#__PURE__*/React.createElement(Divider, {\n    className: classes.divider,\n    orientation: \"horizontal\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: '',\n      password: '',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      password: Yup.string().max(255).required('Password is required')\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values, _ref3) {\n        var setErrors, setStatus, setSubmitting;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                setErrors = _ref3.setErrors, setStatus = _ref3.setStatus, setSubmitting = _ref3.setSubmitting;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return signInWithEmailAndPassword(values.email, values.password);\n\n              case 4:\n                if (isMountedRef.current) {\n                  setStatus({\n                    success: true\n                  });\n                  setSubmitting(false);\n                }\n\n                _context2.next = 11;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](1);\n                console.error(_context2.t0);\n\n                if (isMountedRef.current) {\n                  setStatus({\n                    success: false\n                  });\n                  setErrors({\n                    submit: _context2.t0.message\n                  });\n                  setSubmitting(false);\n                }\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[1, 7]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref4.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, function (_ref5) {\n    var errors = _ref5.errors,\n        handleBlur = _ref5.handleBlur,\n        handleChange = _ref5.handleChange,\n        handleSubmit = _ref5.handleSubmit,\n        isSubmitting = _ref5.isSubmitting,\n        touched = _ref5.touched,\n        values = _ref5.values;\n    return /*#__PURE__*/React.createElement(\"form\", _extends({\n      noValidate: true,\n      onSubmit: handleSubmit,\n      className: clsx(classes.root, className)\n    }, rest, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.email && errors.email),\n      fullWidth: true,\n      helperText: touched.email && errors.email,\n      label: \"Email Address\",\n      margin: \"normal\",\n      name: \"email\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      type: \"email\",\n      value: values.email,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.password && errors.password),\n      fullWidth: true,\n      helperText: touched.password && errors.password,\n      label: \"Password\",\n      margin: \"normal\",\n      name: \"password\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      type: \"password\",\n      value: values.password,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }), errors.submit && /*#__PURE__*/React.createElement(Box, {\n      mt: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormHelperText, {\n      error: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, errors.submit)), /*#__PURE__*/React.createElement(Box, {\n      mt: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      disabled: isSubmitting,\n      fullWidth: true,\n      size: \"large\",\n      type: \"submit\",\n      variant: \"contained\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, \"Log In\")));\n  }));\n};\n\nFirebaseAuthLogin.propTypes = {\n  className: PropTypes.string\n};\nexport default FirebaseAuthLogin;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/views/auth/LoginView/FirebaseAuthLogin.js"],"names":["React","clsx","Yup","PropTypes","Formik","Box","Button","Divider","FormHelperText","TextField","Typography","makeStyles","useAuth","useIsMountedRef","useStyles","theme","root","googleButton","backgroundColor","palette","common","white","providerIcon","marginRight","spacing","divider","flexGrow","dividerText","margin","FirebaseAuthLogin","className","rest","classes","signInWithEmailAndPassword","signInWithGoogle","isMountedRef","handleGoogleClick","console","error","email","password","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","current","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","propTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Divider,\n  FormHelperText,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  googleButton: {\n    backgroundColor: theme.palette.common.white\n  },\n  providerIcon: {\n    marginRight: theme.spacing(2)\n  },\n  divider: {\n    flexGrow: 1\n  },\n  dividerText: {\n    margin: theme.spacing(2)\n  }\n}));\n\nconst FirebaseAuthLogin = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { signInWithEmailAndPassword, signInWithGoogle } = useAuth();\n  const isMountedRef = useIsMountedRef();\n\n  const handleGoogleClick = async () => {\n    try {\n      await signInWithGoogle();\n    } catch(err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        className={classes.googleButton}\n        fullWidth\n        onClick={handleGoogleClick}\n        size=\"large\"\n        variant=\"contained\"\n      >\n        <img\n          alt=\"Google\"\n          className={classes.providerIcon}\n          src=\"/static/images/google.svg\"\n        />\n        Sign in with Google\n      </Button>\n      <Box\n        alignItems=\"center\"\n        display=\"flex\"\n        mt={2}\n      >\n        <Divider\n          className={classes.divider}\n          orientation=\"horizontal\"\n        />\n        <Typography \n          color=\"textSecondary\"\n          variant=\"body1\"\n          className={classes.dividerText}\n        >\n          OR\n        </Typography>\n        <Divider\n          className={classes.divider}\n          orientation=\"horizontal\"\n        />\n      </Box>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          submit: null\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n          password: Yup.string().max(255).required('Password is required')\n        })}\n        onSubmit={async (values, {\n          setErrors,\n          setStatus,\n          setSubmitting\n        }) => {\n          try {\n            await signInWithEmailAndPassword(values.email, values.password);\n\n            if (isMountedRef.current) {\n              setStatus({ success: true });\n              setSubmitting(false);\n            }\n          } catch (err) {\n            console.error(err);\n            if (isMountedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values\n        }) => (\n          <form\n            noValidate\n            onSubmit={handleSubmit}\n            className={clsx(classes.root, className)}\n            {...rest}\n          >\n            <TextField\n              error={Boolean(touched.email && errors.email)}\n              fullWidth\n              helperText={touched.email && errors.email}\n              label=\"Email Address\"\n              margin=\"normal\"\n              name=\"email\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"email\"\n              value={values.email}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={Boolean(touched.password && errors.password)}\n              fullWidth\n              helperText={touched.password && errors.password}\n              label=\"Password\"\n              margin=\"normal\"\n              name=\"password\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"password\"\n              value={values.password}\n              variant=\"outlined\"\n            />\n            {errors.submit && (\n              <Box mt={3}>\n                <FormHelperText error>\n                  {errors.submit}\n                </FormHelperText>\n              </Box>\n            )}\n            <Box mt={2}>\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Log In\n              </Button>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nFirebaseAuthLogin.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default FirebaseAuthLogin;\n"]},"metadata":{},"sourceType":"module"}