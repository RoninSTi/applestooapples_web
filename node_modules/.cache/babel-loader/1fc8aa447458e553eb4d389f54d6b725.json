{"ast":null,"code":"import _regeneratorRuntime from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { createSlice } from '@reduxjs/toolkit';\nimport _ from 'lodash';\nimport api from 'src/utils/api';\nvar initialState = {\n  accounts: [],\n  activeAccount: null\n};\nvar slice = createSlice({\n  name: 'account',\n  initialState: initialState,\n  reducers: {\n    getAccount: function getAccount(state, action) {\n      var account = action.payload.account;\n      state.activeAccount = account;\n    },\n    getAccounts: function getAccounts(state, action) {\n      var accounts = action.payload.accounts;\n      state.accounts = accounts;\n\n      if (!state.activeAccount) {\n        state.activeAccount = accounts[0];\n      }\n    },\n    createAccount: function createAccount(state, action) {\n      var account = action.payload.account;\n      state.activeAccount = account;\n    },\n    updateAccount: function updateAccount(state, action) {\n      var account = action.payload.account;\n      state.activeAccount = account;\n    }\n  }\n});\nexport var reducer = slice.reducer;\nexport var getAccount = function getAccount(id) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return api.get(\"account/\".concat(id));\n\n            case 2:\n              response = _context.sent;\n              dispatch(slice.actions.getAccount({\n                account: response.data\n              }));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getAccounts = function getAccounts() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return api.get(\"accounts\");\n\n            case 2:\n              response = _context2.sent;\n              dispatch(slice.actions.getEvents({\n                accounts: response.data\n              }));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var createAccount = function createAccount(data) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return api({\n                method: 'post',\n                url: 'account',\n                data: data\n              });\n\n            case 2:\n              response = _context3.sent;\n              dispatch(slice.actions.createEvent(response.data));\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport default slice;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/slices/account.js"],"names":["createSlice","_","api","initialState","accounts","activeAccount","slice","name","reducers","getAccount","state","action","account","payload","getAccounts","createAccount","updateAccount","reducer","id","dispatch","get","response","actions","data","getEvents","method","url","createEvent"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport _ from 'lodash';\nimport api from 'src/utils/api';\n\nconst initialState = {\n  accounts: [],\n  activeAccount: null\n};\n\nconst slice = createSlice({\n  name: 'account',\n  initialState,\n  reducers: {\n    getAccount(state, action) {\n      const { account } = action.payload;\n\n      state.activeAccount = account;\n    },\n    getAccounts(state, action) {\n      const { accounts } = action.payload;\n\n      state.accounts = accounts\n\n      if (!state.activeAccount) {\n        state.activeAccount = accounts[0]\n      }\n    },\n    createAccount(state, action) {\n      const { account } = action.payload;\n\n      state.activeAccount = account;\n    },\n    updateAccount(state, action) {\n      const { account } = action.payload;\n\n      state.activeAccount = account\n    }\n  }\n});\n\nexport const reducer = slice.reducer;\n\nexport const getAccount = (id) => async (dispatch) => {\n  const response = await api.get(`account/${id}`);\n\n  dispatch(slice.actions.getAccount({ account: response.data }));\n};\n\nexport const getAccounts = () => async (dispatch) => {\n  const response = await api.get(`accounts`);\n\n  dispatch(slice.actions.getEvents({ accounts: response.data }));\n};\n\nexport const createAccount = (data) => async (dispatch) => {\n  const response = await api({\n    method: 'post',\n    url: 'account',\n    data\n  });\n\n  dispatch(slice.actions.createEvent(response.data));\n};\n\nexport default slice;\n"]},"metadata":{},"sourceType":"module"}