{"ast":null,"code":"import _extends from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectWithoutProperties from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/craigcronin/Development/applestooapples_web_template/src/views/auth/LoginView/JWTLogin.js\";\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { Box, Button, FormHelperText, TextField, makeStyles } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nvar useStyles = makeStyles(function () {\n  return {\n    root: {}\n  };\n});\n\nvar JWTLogin = function JWTLogin(_ref) {\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n\n  var _useAuth = useAuth(),\n      magic = _useAuth.magic;\n\n  var isMountedRef = useIsMountedRef();\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: 'demo@devias.io',\n      submit: null\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email('Must be a valid email').max(255).required('Email is required')\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var setErrors, setStatus, setSubmitting;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setErrors = _ref2.setErrors, setStatus = _ref2.setStatus, setSubmitting = _ref2.setSubmitting;\n                _context.prev = 1;\n                _context.next = 4;\n                return login(values.email);\n\n              case 4:\n                if (isMountedRef.current) {\n                  setStatus({\n                    success: true\n                  });\n                  setSubmitting(false);\n                }\n\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](1);\n                console.error(_context.t0);\n\n                if (isMountedRef.current) {\n                  setStatus({\n                    success: false\n                  });\n                  setErrors({\n                    submit: _context.t0.message\n                  });\n                  setSubmitting(false);\n                }\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 7]]);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, function (_ref4) {\n    var errors = _ref4.errors,\n        handleBlur = _ref4.handleBlur,\n        handleChange = _ref4.handleChange,\n        handleSubmit = _ref4.handleSubmit,\n        isSubmitting = _ref4.isSubmitting,\n        touched = _ref4.touched,\n        values = _ref4.values;\n    return /*#__PURE__*/React.createElement(\"form\", _extends({\n      noValidate: true,\n      onSubmit: handleSubmit,\n      className: clsx(classes.root, className)\n    }, rest, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.email && errors.email),\n      fullWidth: true,\n      autoFocus: true,\n      helperText: touched.email && errors.email,\n      label: \"Email Address\",\n      margin: \"normal\",\n      name: \"email\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      type: \"email\",\n      value: values.email,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      error: Boolean(touched.password && errors.password),\n      fullWidth: true,\n      helperText: touched.password && errors.password,\n      label: \"Password\",\n      margin: \"normal\",\n      name: \"password\",\n      onBlur: handleBlur,\n      onChange: handleChange,\n      type: \"password\",\n      value: values.password,\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }), errors.submit && /*#__PURE__*/React.createElement(Box, {\n      mt: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormHelperText, {\n      error: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    }, errors.submit)), /*#__PURE__*/React.createElement(Box, {\n      mt: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"secondary\",\n      disabled: isSubmitting,\n      fullWidth: true,\n      size: \"large\",\n      type: \"submit\",\n      variant: \"contained\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \"Log In\")), /*#__PURE__*/React.createElement(Box, {\n      mt: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      severity: \"info\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, \"Use\", ' ', /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }, \"demo@devias.io\"), ' ', \"and password\", ' ', /*#__PURE__*/React.createElement(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, \"Password123\")))));\n  });\n};\n\nJWTLogin.propTypes = {\n  className: PropTypes.string\n};\nexport default JWTLogin;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/views/auth/LoginView/JWTLogin.js"],"names":["React","clsx","Yup","PropTypes","Formik","Box","Button","FormHelperText","TextField","makeStyles","Alert","useAuth","useIsMountedRef","useStyles","root","JWTLogin","className","rest","classes","magic","isMountedRef","email","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","login","current","success","console","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean","password","propTypes"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  FormHelperText,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst JWTLogin = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { magic } = useAuth();\n  const isMountedRef = useIsMountedRef();\n\n  return (\n    <Formik\n      initialValues={{\n        email: 'demo@devias.io',\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n      })}\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          await login(values.email);\n\n          if (isMountedRef.current) {\n            setStatus({ success: true });\n            setSubmitting(false);\n          }\n        } catch (err) {\n          console.error(err);\n          if (isMountedRef.current) {\n            setStatus({ success: false });\n            setErrors({ submit: err.message });\n            setSubmitting(false);\n          }\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          noValidate\n          onSubmit={handleSubmit}\n          className={clsx(classes.root, className)}\n          {...rest}\n        >\n          <TextField\n            error={Boolean(touched.email && errors.email)}\n            fullWidth\n            autoFocus\n            helperText={touched.email && errors.email}\n            label=\"Email Address\"\n            margin=\"normal\"\n            name=\"email\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"email\"\n            value={values.email}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={Boolean(touched.password && errors.password)}\n            fullWidth\n            helperText={touched.password && errors.password}\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onBlur={handleBlur}\n            onChange={handleChange}\n            type=\"password\"\n            value={values.password}\n            variant=\"outlined\"\n          />\n          {errors.submit && (\n            <Box mt={3}>\n              <FormHelperText error>\n                {errors.submit}\n              </FormHelperText>\n            </Box>\n          )}\n          <Box mt={2}>\n            <Button\n              color=\"secondary\"\n              disabled={isSubmitting}\n              fullWidth\n              size=\"large\"\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Log In\n            </Button>\n          </Box>\n          <Box mt={2}>\n            <Alert\n              severity=\"info\"\n            >\n              <div>\n                Use\n                {' '}\n                <b>demo@devias.io</b>\n                {' '}\n                and password\n                {' '}\n                <b>Password123</b>\n              </div>\n            </Alert>\n          </Box>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nJWTLogin.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default JWTLogin;\n"]},"metadata":{},"sourceType":"module"}