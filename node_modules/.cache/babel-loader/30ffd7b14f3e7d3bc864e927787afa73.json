{"ast":null,"code":"import _extends from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/craigcronin/Development/applestooapples_web_template/src/views/product/ProductListView/Results.js\";\n\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Button, Card, Checkbox, InputAdornment, FormControlLabel, IconButton, Link, SvgIcon, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, TextField, makeStyles } from '@material-ui/core';\nimport { Image as ImageIcon, Edit as EditIcon, ArrowRight as ArrowRightIcon, Search as SearchIcon } from 'react-feather';\nimport Label from 'src/components/Label';\nvar categoryOptions = [{\n  id: 'all',\n  name: 'All'\n}, {\n  id: 'dress',\n  name: 'Dress'\n}, {\n  id: 'jewelry',\n  name: 'Jewelry'\n}, {\n  id: 'blouse',\n  name: 'Blouse'\n}, {\n  id: 'beauty',\n  name: 'Beauty'\n}];\nvar avalabilityOptions = [{\n  id: 'all',\n  name: 'All'\n}, {\n  id: 'available',\n  name: 'Available'\n}, {\n  id: 'unavailable',\n  name: 'Unavailable'\n}];\nvar sortOptions = [{\n  value: 'updatedAt|desc',\n  label: 'Last update (newest first)'\n}, {\n  value: 'updatedAt|asc',\n  label: 'Last update (oldest first)'\n}, {\n  value: 'createdAt|desc',\n  label: 'Creation date (newest first)'\n}, {\n  value: 'createdAt|asc',\n  label: 'Creation date (oldest first)'\n}];\n\nvar getInventoryLabel = function getInventoryLabel(inventoryType) {\n  var map = {\n    in_stock: {\n      text: 'In Stock',\n      color: 'success'\n    },\n    limited: {\n      text: 'Limited',\n      color: 'warning'\n    },\n    out_of_stock: {\n      text: 'Out of Stock',\n      color: 'error'\n    }\n  };\n  var _map$inventoryType = map[inventoryType],\n      text = _map$inventoryType.text,\n      color = _map$inventoryType.color;\n  return /*#__PURE__*/React.createElement(Label, {\n    color: color,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, text);\n};\n\nvar applyFilters = function applyFilters(products, query, filters) {\n  return products.filter(function (product) {\n    var matches = true;\n\n    if (query && !product.name.toLowerCase().includes(query.toLowerCase())) {\n      matches = false;\n    }\n\n    if (filters.category && product.category !== filters.category) {\n      matches = false;\n    }\n\n    if (filters.availability) {\n      if (filters.availability === 'available' && !product.isAvailable) {\n        matches = false;\n      }\n\n      if (filters.availability === 'unavailable' && product.isAvailable) {\n        matches = false;\n      }\n    }\n\n    if (filters.inStock && !['in_stock', 'limited'].includes(product.inventoryType)) {\n      matches = false;\n    }\n\n    if (filters.isShippable && !product.isShippable) {\n      matches = false;\n    }\n\n    return matches;\n  });\n};\n\nvar applyPagination = function applyPagination(products, page, limit) {\n  return products.slice(page * limit, page * limit + limit);\n};\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    bulkOperations: {\n      position: 'relative'\n    },\n    bulkActions: {\n      paddingLeft: 4,\n      paddingRight: 4,\n      marginTop: 6,\n      position: 'absolute',\n      width: '100%',\n      zIndex: 2,\n      backgroundColor: theme.palette.background.default\n    },\n    bulkAction: {\n      marginLeft: theme.spacing(2)\n    },\n    queryField: {\n      width: 500\n    },\n    categoryField: {\n      flexBasis: 200\n    },\n    availabilityField: {\n      marginLeft: theme.spacing(2),\n      flexBasis: 200\n    },\n    stockField: {\n      marginLeft: theme.spacing(2)\n    },\n    shippableField: {\n      marginLeft: theme.spacing(2)\n    },\n    imageCell: {\n      fontSize: 0,\n      width: 68,\n      flexBasis: 68,\n      flexGrow: 0,\n      flexShrink: 0\n    },\n    image: {\n      height: 68,\n      width: 68\n    }\n  };\n});\n\nvar Results = function Results(_ref) {\n  var className = _ref.className,\n      products = _ref.products,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"products\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedProducts = _useState2[0],\n      setSelectedProducts = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(10),\n      _useState6 = _slicedToArray(_useState5, 2),\n      limit = _useState6[0],\n      setLimit = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      query = _useState8[0],\n      setQuery = _useState8[1];\n\n  var _useState9 = useState(sortOptions[0].value),\n      _useState10 = _slicedToArray(_useState9, 2),\n      sort = _useState10[0],\n      setSort = _useState10[1];\n\n  var _useState11 = useState({\n    category: null,\n    availability: null,\n    inStock: null,\n    isShippable: null\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      filters = _useState12[0],\n      setFilters = _useState12[1];\n\n  var handleQueryChange = function handleQueryChange(event) {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  var handleCategoryChange = function handleCategoryChange(event) {\n    event.persist();\n    var value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters(function (prevFilters) {\n      return _objectSpread(_objectSpread({}, prevFilters), {}, {\n        category: value\n      });\n    });\n  };\n\n  var handleAvailabilityChange = function handleAvailabilityChange(event) {\n    event.persist();\n    var value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters(function (prevFilters) {\n      return _objectSpread(_objectSpread({}, prevFilters), {}, {\n        availability: value\n      });\n    });\n  };\n\n  var handleStockChange = function handleStockChange(event) {\n    event.persist();\n    var value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters(function (prevFilters) {\n      return _objectSpread(_objectSpread({}, prevFilters), {}, {\n        inStock: value\n      });\n    });\n  };\n\n  var handleShippableChange = function handleShippableChange(event) {\n    event.persist();\n    var value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters(function (prevFilters) {\n      return _objectSpread(_objectSpread({}, prevFilters), {}, {\n        isShippable: value\n      });\n    });\n  };\n\n  var handleSortChange = function handleSortChange(event) {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  var handleSelectAllProducts = function handleSelectAllProducts(event) {\n    setSelectedProducts(event.target.checked ? products.map(function (product) {\n      return product.id;\n    }) : []);\n  };\n\n  var handleSelectOneProduct = function handleSelectOneProduct(event, productId) {\n    if (!selectedProducts.includes(productId)) {\n      setSelectedProducts(function (prevSelected) {\n        return [].concat(_toConsumableArray(prevSelected), [productId]);\n      });\n    } else {\n      setSelectedProducts(function (prevSelected) {\n        return prevSelected.filter(function (id) {\n          return id !== productId;\n        });\n      });\n    }\n  };\n\n  var handlePageChange = function handlePageChange(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleLimitChange = function handleLimitChange(event) {\n    setLimit(parseInt(event.target.value));\n  }; // Usually query is done on backend with indexing solutions\n\n\n  var filteredProducts = applyFilters(products, query, filters);\n  var paginatedProducts = applyPagination(filteredProducts, page, limit);\n  var enableBulkOperations = selectedProducts.length > 0;\n  var selectedSomeProducts = selectedProducts.length > 0 && selectedProducts.length < products.length;\n  var selectedAllProducts = selectedProducts.length === products.length;\n  return /*#__PURE__*/React.createElement(Card, _extends({\n    className: clsx(classes.root, className)\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    p: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.queryField,\n    InputProps: {\n      startAdornment: /*#__PURE__*/React.createElement(InputAdornment, {\n        position: \"start\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(SvgIcon, {\n        fontSize: \"small\",\n        color: \"action\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(SearchIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }\n      })))\n    },\n    onChange: handleQueryChange,\n    placeholder: \"Search products\",\n    value: query,\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    flexGrow: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    label: \"Sort By\",\n    name: \"sort\",\n    onChange: handleSortChange,\n    select: true,\n    SelectProps: {\n      native: true\n    },\n    value: sort,\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 11\n    }\n  }, sortOptions.map(function (option) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: option.value,\n      value: option.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 15\n      }\n    }, option.label);\n  }))), /*#__PURE__*/React.createElement(Box, {\n    mt: 3,\n    display: \"flex\",\n    alignItems: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: classes.categoryField,\n    label: \"Category\",\n    name: \"category\",\n    onChange: handleCategoryChange,\n    select: true,\n    SelectProps: {\n      native: true\n    },\n    value: filters.category || 'all',\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 11\n    }\n  }, categoryOptions.map(function (categoryOption) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: categoryOption.id,\n      value: categoryOption.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 15\n      }\n    }, categoryOption.name);\n  })), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.availabilityField,\n    label: \"Availability\",\n    name: \"availability\",\n    onChange: handleAvailabilityChange,\n    select: true,\n    SelectProps: {\n      native: true\n    },\n    value: filters.availability || 'all',\n    variant: \"outlined\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 11\n    }\n  }, avalabilityOptions.map(function (avalabilityOption) {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: avalabilityOption.id,\n      value: avalabilityOption.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 15\n      }\n    }, avalabilityOption.name);\n  })), /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: classes.stockField,\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: !!filters.inStock,\n      onChange: handleStockChange,\n      name: \"inStock\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 15\n      }\n    }),\n    label: \"In Stock\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: classes.shippableField,\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: !!filters.isShippable,\n      onChange: handleShippableChange,\n      name: \"Shippable\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 15\n      }\n    }),\n    label: \"Shippable\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 11\n    }\n  }))), enableBulkOperations && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bulkOperations,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.bulkActions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: selectedAllProducts,\n    indeterminate: selectedSomeProducts,\n    onChange: handleSelectAllProducts,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.bulkAction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 13\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"outlined\",\n    className: classes.bulkAction,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 13\n    }\n  }, \"Edit\"))), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    minWidth: 1200,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: selectedAllProducts,\n    indeterminate: selectedSomeProducts,\n    onChange: handleSelectAllProducts,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 464,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 17\n    }\n  }, \"Inventory\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 17\n    }\n  }, \"Details\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 17\n    }\n  }, \"Attributes\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 17\n    }\n  }, \"Price\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 17\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 13\n    }\n  }, paginatedProducts.map(function (product) {\n    var isProductSelected = selectedProducts.includes(product.id);\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      key: product.id,\n      selected: isProductSelected,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: isProductSelected,\n      onChange: function onChange(event) {\n        return handleSelectOneProduct(event, product.id);\n      },\n      value: isProductSelected,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.imageCell,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 21\n      }\n    }, product.image ? /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Product\",\n      src: product.image,\n      className: classes.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(Box, {\n      p: 2,\n      bgcolor: \"background.dark\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SvgIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(ImageIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      variant: \"subtitle2\",\n      color: \"textPrimary\",\n      component: RouterLink,\n      underline: \"none\",\n      to: \"#\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 23\n      }\n    }, product.name)), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 21\n      }\n    }, getInventoryLabel(product.inventoryType)), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 21\n      }\n    }, product.quantity, ' ', \"in stock\", product.variants > 1 && \" in \".concat(product.variants, \" variants\")), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 21\n      }\n    }, product.attributes.map(function (attr) {\n      return attr;\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 21\n      }\n    }, numeral(product.price).format(\"\".concat(product.currency, \"0,0.00\"))), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(SvgIcon, {\n      fontSize: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(EditIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 27\n      }\n    }))), /*#__PURE__*/React.createElement(IconButton, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(SvgIcon, {\n      fontSize: \"small\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ArrowRightIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 27\n      }\n    })))));\n  }))), /*#__PURE__*/React.createElement(TablePagination, {\n    component: \"div\",\n    count: filteredProducts.length,\n    onChangePage: handlePageChange,\n    onChangeRowsPerPage: handleLimitChange,\n    page: page,\n    rowsPerPage: limit,\n    rowsPerPageOptions: [5, 10, 25],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 11\n    }\n  }))));\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  products: PropTypes.array.isRequired\n};\nResults.defaultProps = {\n  products: []\n};\nexport default Results;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/views/product/ProductListView/Results.js"],"names":["React","useState","Link","RouterLink","clsx","numeral","PropTypes","PerfectScrollbar","Box","Button","Card","Checkbox","InputAdornment","FormControlLabel","IconButton","SvgIcon","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TextField","makeStyles","Image","ImageIcon","Edit","EditIcon","ArrowRight","ArrowRightIcon","Search","SearchIcon","Label","categoryOptions","id","name","avalabilityOptions","sortOptions","value","label","getInventoryLabel","inventoryType","map","in_stock","text","color","limited","out_of_stock","applyFilters","products","query","filters","filter","product","matches","toLowerCase","includes","category","availability","isAvailable","inStock","isShippable","applyPagination","page","limit","slice","useStyles","theme","root","bulkOperations","position","bulkActions","paddingLeft","paddingRight","marginTop","width","zIndex","backgroundColor","palette","background","default","bulkAction","marginLeft","spacing","queryField","categoryField","flexBasis","availabilityField","stockField","shippableField","imageCell","fontSize","flexGrow","flexShrink","image","height","Results","className","rest","classes","selectedProducts","setSelectedProducts","setPage","setLimit","setQuery","sort","setSort","setFilters","handleQueryChange","event","persist","target","handleCategoryChange","prevFilters","handleAvailabilityChange","handleStockChange","checked","handleShippableChange","handleSortChange","handleSelectAllProducts","handleSelectOneProduct","productId","prevSelected","handlePageChange","newPage","handleLimitChange","parseInt","filteredProducts","paginatedProducts","enableBulkOperations","length","selectedSomeProducts","selectedAllProducts","startAdornment","native","option","categoryOption","avalabilityOption","isProductSelected","quantity","variants","attributes","attr","price","format","currency","propTypes","string","array","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport numeral from 'numeral';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  InputAdornment,\n  FormControlLabel,\n  IconButton,\n  Link,\n  SvgIcon,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Image as ImageIcon,\n  Edit as EditIcon,\n  ArrowRight as ArrowRightIcon,\n  Search as SearchIcon\n} from 'react-feather';\nimport Label from 'src/components/Label';\n\nconst categoryOptions = [\n  {\n    id: 'all',\n    name: 'All'\n  },\n  {\n    id: 'dress',\n    name: 'Dress'\n  },\n  {\n    id: 'jewelry',\n    name: 'Jewelry'\n  },\n  {\n    id: 'blouse',\n    name: 'Blouse'\n  },\n  {\n    id: 'beauty',\n    name: 'Beauty'\n  }\n];\n\nconst avalabilityOptions = [\n  {\n    id: 'all',\n    name: 'All'\n  },\n  {\n    id: 'available',\n    name: 'Available'\n  },\n  {\n    id: 'unavailable',\n    name: 'Unavailable'\n  }\n];\n\nconst sortOptions = [\n  {\n    value: 'updatedAt|desc',\n    label: 'Last update (newest first)'\n  },\n  {\n    value: 'updatedAt|asc',\n    label: 'Last update (oldest first)'\n  },\n  {\n    value: 'createdAt|desc',\n    label: 'Creation date (newest first)'\n  },\n  {\n    value: 'createdAt|asc',\n    label: 'Creation date (oldest first)'\n  }\n];\n\nconst getInventoryLabel = (inventoryType) => {\n  const map = {\n    in_stock: {\n      text: 'In Stock',\n      color: 'success'\n    },\n    limited: {\n      text: 'Limited',\n      color: 'warning'\n    },\n    out_of_stock: {\n      text: 'Out of Stock',\n      color: 'error'\n    }\n  };\n\n  const { text, color } = map[inventoryType];\n\n  return (\n    <Label color={color}>\n      {text}\n    </Label>\n  );\n};\n\nconst applyFilters = (products, query, filters) => {\n  return products.filter((product) => {\n    let matches = true;\n\n    if (query && !product.name.toLowerCase().includes(query.toLowerCase())) {\n      matches = false;\n    }\n\n    if (filters.category && product.category !== filters.category) {\n      matches = false;\n    }\n\n    if (filters.availability) {\n      if (filters.availability === 'available' && !product.isAvailable) {\n        matches = false;\n      }\n\n      if (filters.availability === 'unavailable' && product.isAvailable) {\n        matches = false;\n      }\n    }\n\n    if (filters.inStock && !['in_stock', 'limited'].includes(product.inventoryType)) {\n      matches = false;\n    }\n\n    if (filters.isShippable && !product.isShippable) {\n      matches = false;\n    }\n\n    return matches;\n  });\n};\n\nconst applyPagination = (products, page, limit) => {\n  return products.slice(page * limit, page * limit + limit);\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  bulkOperations: {\n    position: 'relative'\n  },\n  bulkActions: {\n    paddingLeft: 4,\n    paddingRight: 4,\n    marginTop: 6,\n    position: 'absolute',\n    width: '100%',\n    zIndex: 2,\n    backgroundColor: theme.palette.background.default\n  },\n  bulkAction: {\n    marginLeft: theme.spacing(2)\n  },\n  queryField: {\n    width: 500\n  },\n  categoryField: {\n    flexBasis: 200\n  },\n  availabilityField: {\n    marginLeft: theme.spacing(2),\n    flexBasis: 200\n  },\n  stockField: {\n    marginLeft: theme.spacing(2)\n  },\n  shippableField: {\n    marginLeft: theme.spacing(2)\n  },\n  imageCell: {\n    fontSize: 0,\n    width: 68,\n    flexBasis: 68,\n    flexGrow: 0,\n    flexShrink: 0\n  },\n  image: {\n    height: 68,\n    width: 68\n  }\n}));\n\nconst Results = ({ className, products, ...rest }) => {\n  const classes = useStyles();\n  const [selectedProducts, setSelectedProducts] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    category: null,\n    availability: null,\n    inStock: null,\n    isShippable: null\n  });\n\n  const handleQueryChange = (event) => {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  const handleCategoryChange = (event) => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      category: value\n    }));\n  };\n\n  const handleAvailabilityChange = (event) => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.value !== 'all') {\n      value = event.target.value;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      availability: value\n    }));\n  };\n\n  const handleStockChange = (event) => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      inStock: value\n    }));\n  };\n\n  const handleShippableChange = (event) => {\n    event.persist();\n\n    let value = null;\n\n    if (event.target.checked) {\n      value = true;\n    }\n\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      isShippable: value\n    }));\n  };\n\n  const handleSortChange = (event) => {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllProducts = (event) => {\n    setSelectedProducts(event.target.checked\n      ? products.map((product) => product.id)\n      : []);\n  };\n\n  const handleSelectOneProduct = (event, productId) => {\n    if (!selectedProducts.includes(productId)) {\n      setSelectedProducts((prevSelected) => [...prevSelected, productId]);\n    } else {\n      setSelectedProducts((prevSelected) => prevSelected.filter((id) => id !== productId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  // Usually query is done on backend with indexing solutions\n  const filteredProducts = applyFilters(products, query, filters);\n  const paginatedProducts = applyPagination(filteredProducts, page, limit);\n  const enableBulkOperations = selectedProducts.length > 0;\n  const selectedSomeProducts = selectedProducts.length > 0 && selectedProducts.length < products.length;\n  const selectedAllProducts = selectedProducts.length === products.length;\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box p={2}>\n        <Box\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <TextField\n            className={classes.queryField}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SvgIcon\n                    fontSize=\"small\"\n                    color=\"action\"\n                  >\n                    <SearchIcon />\n                  </SvgIcon>\n                </InputAdornment>\n              )\n            }}\n            onChange={handleQueryChange}\n            placeholder=\"Search products\"\n            value={query}\n            variant=\"outlined\"\n          />\n          <Box flexGrow={1} />\n          <TextField\n            label=\"Sort By\"\n            name=\"sort\"\n            onChange={handleSortChange}\n            select\n            SelectProps={{ native: true }}\n            value={sort}\n            variant=\"outlined\"\n          >\n            {sortOptions.map((option) => (\n              <option\n                key={option.value}\n                value={option.value}\n              >\n                {option.label}\n              </option>\n            ))}\n          </TextField>\n        </Box>\n        <Box\n          mt={3}\n          display=\"flex\"\n          alignItems=\"center\"\n        >\n          <TextField\n            className={classes.categoryField}\n            label=\"Category\"\n            name=\"category\"\n            onChange={handleCategoryChange}\n            select\n            SelectProps={{ native: true }}\n            value={filters.category || 'all'}\n            variant=\"outlined\"\n          >\n            {categoryOptions.map((categoryOption) => (\n              <option\n                key={categoryOption.id}\n                value={categoryOption.id}\n              >\n                {categoryOption.name}\n              </option>\n            ))}\n          </TextField>\n          <TextField\n            className={classes.availabilityField}\n            label=\"Availability\"\n            name=\"availability\"\n            onChange={handleAvailabilityChange}\n            select\n            SelectProps={{ native: true }}\n            value={filters.availability || 'all'}\n            variant=\"outlined\"\n          >\n            {avalabilityOptions.map((avalabilityOption) => (\n              <option\n                key={avalabilityOption.id}\n                value={avalabilityOption.id}\n              >\n                {avalabilityOption.name}\n              </option>\n            ))}\n          </TextField>\n          <FormControlLabel\n            className={classes.stockField}\n            control={(\n              <Checkbox\n                checked={!!filters.inStock}\n                onChange={handleStockChange}\n                name=\"inStock\"\n              />\n            )}\n            label=\"In Stock\"\n          />\n          <FormControlLabel\n            className={classes.shippableField}\n            control={(\n              <Checkbox\n                checked={!!filters.isShippable}\n                onChange={handleShippableChange}\n                name=\"Shippable\"\n              />\n            )}\n            label=\"Shippable\"\n          />\n        </Box>\n      </Box>\n      {enableBulkOperations && (\n        <div className={classes.bulkOperations}>\n          <div className={classes.bulkActions}>\n            <Checkbox\n              checked={selectedAllProducts}\n              indeterminate={selectedSomeProducts}\n              onChange={handleSelectAllProducts}\n            />\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n            >\n              Delete\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n            >\n              Edit\n            </Button>\n          </div>\n        </div>\n      )}\n      <PerfectScrollbar>\n        <Box minWidth={1200}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllProducts}\n                    indeterminate={selectedSomeProducts}\n                    onChange={handleSelectAllProducts}\n                  />\n                </TableCell>\n                <TableCell />\n                <TableCell>\n                  Name\n                </TableCell>\n                <TableCell>\n                  Inventory\n                </TableCell>\n                <TableCell>\n                  Details\n                </TableCell>\n                <TableCell>\n                  Attributes\n                </TableCell>\n                <TableCell>\n                  Price\n                </TableCell>\n                <TableCell align=\"right\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedProducts.map((product) => {\n                const isProductSelected = selectedProducts.includes(product.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={product.id}\n                    selected={isProductSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isProductSelected}\n                        onChange={(event) => handleSelectOneProduct(event, product.id)}\n                        value={isProductSelected}\n                      />\n                    </TableCell>\n                    <TableCell className={classes.imageCell}>\n                      {product.image ? (\n                        <img\n                          alt=\"Product\"\n                          src={product.image}\n                          className={classes.image}\n                        />\n                      ) : (\n                        <Box\n                          p={2}\n                          bgcolor=\"background.dark\"\n                        >\n                          <SvgIcon>\n                            <ImageIcon />\n                          </SvgIcon>\n                        </Box>\n                      )}\n                    </TableCell>\n                    <TableCell>\n                      <Link\n                        variant=\"subtitle2\"\n                        color=\"textPrimary\"\n                        component={RouterLink}\n                        underline=\"none\"\n                        to=\"#\"\n                      >\n                        {product.name}\n                      </Link>\n                    </TableCell>\n                    <TableCell>\n                      {getInventoryLabel(product.inventoryType)}\n                    </TableCell>\n                    <TableCell>\n                      {product.quantity}\n                      {' '}\n                      in stock\n                      {product.variants > 1 && ` in ${product.variants} variants`}\n                    </TableCell>\n                    <TableCell>\n                      {product.attributes.map((attr) => attr)}\n                    </TableCell>\n                    <TableCell>\n                      {numeral(product.price).format(`${product.currency}0,0.00`)}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton>\n                        <SvgIcon fontSize=\"small\">\n                          <EditIcon />\n                        </SvgIcon>\n                      </IconButton>\n                      <IconButton>\n                        <SvgIcon fontSize=\"small\">\n                          <ArrowRightIcon />\n                        </SvgIcon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n          <TablePagination\n            component=\"div\"\n            count={filteredProducts.length}\n            onChangePage={handlePageChange}\n            onChangeRowsPerPage={handleLimitChange}\n            page={page}\n            rowsPerPage={limit}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </Box>\n      </PerfectScrollbar>\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  products: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  products: []\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}