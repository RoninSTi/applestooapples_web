{"ast":null,"code":"import _extends from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"/Users/craigcronin/Development/applestooapples_web_template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/craigcronin/Development/applestooapples_web_template/src/views/chat/ChatView/RecentThreads/Search.js\";\n\nimport React, { forwardRef } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { Avatar, Box, ClickAwayListener, Input, SvgIcon, List, ListItem, ListItemText, ListItemAvatar, Typography, makeStyles } from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      paddingLeft: theme.spacing(1),\n      paddingRight: theme.spacing(1)\n    },\n    search: {\n      display: 'flex',\n      alignItems: 'center',\n      height: 44,\n      borderRadius: 22,\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      backgroundColor: theme.palette.background.dark\n    },\n    searchInput: {\n      flexGrow: 1,\n      marginLeft: theme.spacing(1)\n    },\n    avatar: {\n      height: 32,\n      width: 32\n    }\n  };\n});\nvar Search = forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      isFocused = _ref.isFocused,\n      onChange = _ref.onChange,\n      onClickAway = _ref.onClickAway,\n      onFocus = _ref.onFocus,\n      onSelect = _ref.onSelect,\n      query = _ref.query,\n      results = _ref.results,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"isFocused\", \"onChange\", \"onClickAway\", \"onFocus\", \"onSelect\", \"query\", \"results\"]);\n\n  var classes = useStyles();\n  var displayResults = query && isFocused;\n\n  var handleSelect = function handleSelect(result) {\n    if (onSelect) {\n      onSelect(result);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ClickAwayListener, {\n    onClickAway: onClickAway,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.search,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SvgIcon, {\n    fontSize: \"small\",\n    color: \"action\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    className: classes.searchInput,\n    disableUnderline: true,\n    onChange: onChange,\n    onFocus: onFocus,\n    placeholder: \"Search contacts\",\n    value: query,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  })), displayResults && /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    color: \"textSecondary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Contacts\"), /*#__PURE__*/React.createElement(List, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, results.map(function (result) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      key: result.id,\n      onClick: function onClick() {\n        return handleSelect(result);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      src: result.avatar,\n      className: classes.avatar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: result.name,\n      primaryTypographyProps: {\n        noWrap: true,\n        variant: 'h6',\n        color: 'textPrimary'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }));\n  })))));\n});\nSearch.propTypes = {\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  onClickAway: PropTypes.func,\n  onFocus: PropTypes.func,\n  onSelect: PropTypes.func,\n  query: PropTypes.string,\n  results: PropTypes.array\n};\nSearch.defaultProps = {\n  isFocused: false,\n  query: '',\n  results: []\n};\nexport default Search;","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/views/chat/ChatView/RecentThreads/Search.js"],"names":["React","forwardRef","clsx","PropTypes","Avatar","Box","ClickAwayListener","Input","SvgIcon","List","ListItem","ListItemText","ListItemAvatar","Typography","makeStyles","Search","SearchIcon","useStyles","theme","root","paddingLeft","spacing","paddingRight","search","display","alignItems","height","borderRadius","backgroundColor","palette","background","dark","searchInput","flexGrow","marginLeft","avatar","width","ref","className","isFocused","onChange","onClickAway","onFocus","onSelect","query","results","rest","classes","displayResults","handleSelect","result","map","id","name","noWrap","variant","color","propTypes","string","func","array","defaultProps"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar,\n  Box,\n  ClickAwayListener,\n  Input,\n  SvgIcon,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { Search as SearchIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(1),\n    paddingRight: theme.spacing(1)\n  },\n  search: {\n    display: 'flex',\n    alignItems: 'center',\n    height: 44,\n    borderRadius: 22,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    backgroundColor: theme.palette.background.dark\n  },\n  searchInput: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(1)\n  },\n  avatar: {\n    height: 32,\n    width: 32\n  }\n}));\n\nconst Search = forwardRef(({\n  className,\n  isFocused,\n  onChange,\n  onClickAway,\n  onFocus,\n  onSelect,\n  query,\n  results,\n  ...rest\n}, ref) => {\n  const classes = useStyles();\n\n  const displayResults = query && isFocused;\n\n  const handleSelect = (result) => {\n    if (onSelect) {\n      onSelect(result);\n    }\n  };\n\n  return (\n    <ClickAwayListener onClickAway={onClickAway}>\n      <div\n        className={clsx(classes.root, className)}\n        ref={ref}\n        {...rest}\n      >\n        <div className={classes.search}>\n          <SvgIcon\n            fontSize=\"small\"\n            color=\"action\"\n          >\n            <SearchIcon />\n          </SvgIcon>\n          <Input\n            className={classes.searchInput}\n            disableUnderline\n            onChange={onChange}\n            onFocus={onFocus}\n            placeholder=\"Search contacts\"\n            value={query}\n          />\n        </div>\n        {displayResults && (\n          <Box mt={2}>\n            <Typography\n              variant=\"h6\"\n              color=\"textSecondary\"\n            >\n              Contacts\n            </Typography>\n            <List>\n              {results.map((result) => {\n                return (\n                  <ListItem\n                    button\n                    key={result.id}\n                    onClick={() => handleSelect(result)}\n                  >\n                    <ListItemAvatar>\n                      <Avatar\n                        src={result.avatar}\n                        className={classes.avatar}\n                      />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={result.name}\n                      primaryTypographyProps={{\n                        noWrap: true,\n                        variant: 'h6',\n                        color: 'textPrimary'\n                      }}\n                    />\n                  </ListItem>\n                );\n              })}\n            </List>\n          </Box>\n        )}\n      </div>\n    </ClickAwayListener>\n  );\n});\n\nSearch.propTypes = {\n  className: PropTypes.string,\n  onChange: PropTypes.func,\n  onClickAway: PropTypes.func,\n  onFocus: PropTypes.func,\n  onSelect: PropTypes.func,\n  query: PropTypes.string,\n  results: PropTypes.array\n};\n\nSearch.defaultProps = {\n  isFocused: false,\n  query: '',\n  results: []\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}