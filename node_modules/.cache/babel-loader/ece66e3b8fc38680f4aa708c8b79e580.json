{"ast":null,"code":"import moment from 'moment';\nimport mock from 'src/utils/mock';\nmock.onGet('/api/orders').reply(function () {\n  var orders = [{\n    id: '5ecb8a6d9f53bfae09e16115',\n    createdAt: moment().subtract(32, 'minutes').subtract(23, 'seconds').toDate().getTime(),\n    currency: '$',\n    customer: {\n      name: 'Cao Yu'\n    },\n    number: 'DEV-102',\n    paymentMethod: 'CreditCard',\n    status: 'pending',\n    totalAmount: 500.00\n  }, {\n    id: '5ecb8a738aa6f3e577c2b3ec',\n    createdAt: moment().subtract(36, 'minutes').subtract(51, 'seconds').toDate().getTime(),\n    currency: '$',\n    customer: {\n      name: 'Alex Richardson'\n    },\n    number: 'DEV-101',\n    paymentMethod: 'PayPal',\n    status: 'completed',\n    totalAmount: 500.00\n  }, {\n    id: '5ecb8a795e53f134013eba3b',\n    createdAt: moment().subtract(38, 'minutes').subtract(55, 'seconds').toDate().getTime(),\n    currency: '$',\n    customer: {\n      name: 'Anje Keizer'\n    },\n    number: 'DEV-100',\n    paymentMethod: 'CreditCard',\n    status: 'pending',\n    totalAmount: 500.00\n  }, {\n    id: '5ecb8a7f738cc572a9ce0277',\n    createdAt: moment().subtract(40, 'minutes').subtract(3, 'seconds').toDate().getTime(),\n    currency: '$',\n    customer: {\n      name: 'Clarke Gillebert'\n    },\n    number: 'DEV-99',\n    paymentMethod: 'PayPal',\n    status: 'completed',\n    totalAmount: 500.00\n  }, {\n    id: '5e86805e2bafd54f66cc95c3',\n    createdAt: moment().subtract(45, 'minutes').subtract(32, 'seconds').toDate().getTime(),\n    currency: '$',\n    customer: {\n      name: 'Adam Denisov'\n    },\n    number: 'DEV-98',\n    paymentMethod: 'PayPal',\n    status: 'completed',\n    totalAmount: 500.00\n  }, {\n    id: '5ecb8a85a850c16fa413849c',\n    createdAt: moment().subtract(48, 'minutes').subtract(57, 'seconds').toDate().getTime(),\n    currency: '$',\n    customer: {\n      name: 'Miller Edwards'\n    },\n    status: 'pending',\n    number: 'DEV-97',\n    paymentMethod: 'CreditCard',\n    totalAmount: 500.00\n  }, {\n    id: '5ecb8a8e69ba2e409ea0168f',\n    createdAt: moment().subtract(49, 'minutes').subtract(4, 'seconds').toDate().getTime(),\n    currency: '$',\n    customer: {\n      name: 'Emilee Simchenko'\n    },\n    number: 'DEV-96',\n    paymentMethod: 'CreditCard',\n    status: 'completed',\n    totalAmount: 500.00\n  }, {\n    id: '5ecb8a9341c68839d387e1c4',\n    createdAt: moment().subtract(57, 'minutes').subtract(43, 'seconds').toDate().getTime(),\n    currency: '$',\n    customer: {\n      name: 'Elliott Stone'\n    },\n    number: 'DEV-95',\n    paymentMethod: 'PayPal',\n    status: 'rejected',\n    totalAmount: 500.00\n  }, {\n    id: '5ecb8a984bfbb97c9ae458e8',\n    createdAt: moment().subtract(59, 'minutes').subtract(6, 'seconds').toDate().getTime(),\n    currency: '$',\n    customer: {\n      name: 'Shen Zhi'\n    },\n    number: 'DEV-94',\n    paymentMethod: 'CreditCard',\n    status: 'canceled',\n    totalAmount: 500.00\n  }, {\n    id: '5ecb8aa08d9127dba654ce7a',\n    createdAt: moment().subtract(1, 'hour').subtract(15, 'minutes').subtract(43, 'seconds').toDate().getTime(),\n    currency: '$',\n    customer: {\n      name: 'Merrile Burgett'\n    },\n    number: 'DEV-93',\n    paymentMethod: 'PayPal',\n    status: 'canceled',\n    totalAmount: 500.00\n  }];\n  return [200, {\n    orders: orders\n  }];\n});\nmock.onGet('/api/orders/1').reply(function () {\n  var order = {\n    id: '5ecb8a6879877087d4aa2690',\n    coupon: null,\n    createdAt: moment().toDate().getTime(),\n    currency: '$',\n    customer: {\n      address1: 'Street John Wick, no. 7',\n      address2: 'House #25',\n      city: 'San Diego',\n      country: 'USA',\n      name: 'Adam Denisov'\n    },\n    items: [{\n      id: '5ecb8abbdd6dfb1f9d6bf98b',\n      billingCycle: 'monthly',\n      currency: '$',\n      name: 'Project Points',\n      quantity: 25,\n      unitAmount: 50.25\n    }, {\n      id: '5ecb8ac10f116d04bed990eb',\n      billingCycle: 'monthly',\n      currency: '$',\n      name: 'Freelancer Subscription',\n      quantity: 1,\n      unitAmount: 5.00\n    }],\n    number: 'DEV-103',\n    paymentMethod: 'CreditCard',\n    status: 'pending',\n    totalAmount: 500.00\n  };\n  return [200, {\n    order: order\n  }];\n});","map":{"version":3,"sources":["/Users/craigcronin/Development/applestooapples_web_template/src/__mocks__/orders.js"],"names":["moment","mock","onGet","reply","orders","id","createdAt","subtract","toDate","getTime","currency","customer","name","number","paymentMethod","status","totalAmount","order","coupon","address1","address2","city","country","items","billingCycle","quantity","unitAmount"],"mappings":"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","sourcesContent":["import moment from 'moment';\nimport mock from 'src/utils/mock';\n\nmock.onGet('/api/orders').reply(() => {\n  const orders = [\n    {\n      id: '5ecb8a6d9f53bfae09e16115',\n      createdAt: moment()\n        .subtract(32, 'minutes')\n        .subtract(23, 'seconds')\n        .toDate()\n        .getTime(),\n      currency: '$',\n      customer: {\n        name: 'Cao Yu'\n      },\n      number: 'DEV-102',\n      paymentMethod: 'CreditCard',\n      status: 'pending',\n      totalAmount: 500.00\n    },\n    {\n      id: '5ecb8a738aa6f3e577c2b3ec',\n      createdAt: moment()\n        .subtract(36, 'minutes')\n        .subtract(51, 'seconds')\n        .toDate()\n        .getTime(),\n      currency: '$',\n      customer: {\n        name: 'Alex Richardson'\n      },\n      number: 'DEV-101',\n      paymentMethod: 'PayPal',\n      status: 'completed',\n      totalAmount: 500.00\n    },\n    {\n      id: '5ecb8a795e53f134013eba3b',\n      createdAt: moment()\n        .subtract(38, 'minutes')\n        .subtract(55, 'seconds')\n        .toDate()\n        .getTime(),\n      currency: '$',\n      customer: {\n        name: 'Anje Keizer'\n      },\n      number: 'DEV-100',\n      paymentMethod: 'CreditCard',\n      status: 'pending',\n      totalAmount: 500.00\n    },\n    {\n      id: '5ecb8a7f738cc572a9ce0277',\n      createdAt: moment()\n        .subtract(40, 'minutes')\n        .subtract(3, 'seconds')\n        .toDate()\n        .getTime(),\n      currency: '$',\n      customer: {\n        name: 'Clarke Gillebert'\n      },\n      number: 'DEV-99',\n      paymentMethod: 'PayPal',\n      status: 'completed',\n      totalAmount: 500.00\n    },\n    {\n      id: '5e86805e2bafd54f66cc95c3',\n      createdAt: moment()\n        .subtract(45, 'minutes')\n        .subtract(32, 'seconds')\n        .toDate()\n        .getTime(),\n      currency: '$',\n      customer: {\n        name: 'Adam Denisov'\n      },\n      number: 'DEV-98',\n      paymentMethod: 'PayPal',\n      status: 'completed',\n      totalAmount: 500.00\n    },\n    {\n      id: '5ecb8a85a850c16fa413849c',\n      createdAt: moment()\n        .subtract(48, 'minutes')\n        .subtract(57, 'seconds')\n        .toDate()\n        .getTime(),\n      currency: '$',\n      customer: {\n        name: 'Miller Edwards'\n      },\n      status: 'pending',\n      number: 'DEV-97',\n      paymentMethod: 'CreditCard',\n      totalAmount: 500.00\n    },\n    {\n      id: '5ecb8a8e69ba2e409ea0168f',\n      createdAt: moment()\n        .subtract(49, 'minutes')\n        .subtract(4, 'seconds')\n        .toDate()\n        .getTime(),\n      currency: '$',\n      customer: {\n        name: 'Emilee Simchenko'\n      },\n      number: 'DEV-96',\n      paymentMethod: 'CreditCard',\n      status: 'completed',\n      totalAmount: 500.00\n    },\n    {\n      id: '5ecb8a9341c68839d387e1c4',\n      createdAt: moment()\n        .subtract(57, 'minutes')\n        .subtract(43, 'seconds')\n        .toDate()\n        .getTime(),\n      currency: '$',\n      customer: {\n        name: 'Elliott Stone'\n      },\n      number: 'DEV-95',\n      paymentMethod: 'PayPal',\n      status: 'rejected',\n      totalAmount: 500.00\n    },\n    {\n      id: '5ecb8a984bfbb97c9ae458e8',\n      createdAt: moment()\n        .subtract(59, 'minutes')\n        .subtract(6, 'seconds')\n        .toDate()\n        .getTime(),\n      currency: '$',\n      customer: {\n        name: 'Shen Zhi'\n      },\n      number: 'DEV-94',\n      paymentMethod: 'CreditCard',\n      status: 'canceled',\n      totalAmount: 500.00\n    },\n    {\n      id: '5ecb8aa08d9127dba654ce7a',\n      createdAt: moment()\n        .subtract(1, 'hour')\n        .subtract(15, 'minutes')\n        .subtract(43, 'seconds')\n        .toDate()\n        .getTime(),\n      currency: '$',\n      customer: {\n        name: 'Merrile Burgett'\n      },\n      number: 'DEV-93',\n      paymentMethod: 'PayPal',\n      status: 'canceled',\n      totalAmount: 500.00\n    }\n  ];\n\n  return [200, { orders }];\n});\n\nmock.onGet('/api/orders/1').reply(() => {\n  const order = {\n    id: '5ecb8a6879877087d4aa2690',\n    coupon: null,\n    createdAt: moment()\n      .toDate()\n      .getTime(),\n    currency: '$',\n    customer: {\n      address1: 'Street John Wick, no. 7',\n      address2: 'House #25',\n      city: 'San Diego',\n      country: 'USA',\n      name: 'Adam Denisov'\n    },\n    items: [\n      {\n        id: '5ecb8abbdd6dfb1f9d6bf98b',\n        billingCycle: 'monthly',\n        currency: '$',\n        name: 'Project Points',\n        quantity: 25,\n        unitAmount: 50.25\n      },\n      {\n        id: '5ecb8ac10f116d04bed990eb',\n        billingCycle: 'monthly',\n        currency: '$',\n        name: 'Freelancer Subscription',\n        quantity: 1,\n        unitAmount: 5.00\n      }\n    ],\n    number: 'DEV-103',\n    paymentMethod: 'CreditCard',\n    status: 'pending',\n    totalAmount: 500.00\n  };\n\n  return [200, { order }];\n});\n"]},"metadata":{},"sourceType":"module"}